	.text
	.file	"YAML_Doc.cpp"
	.globl	_ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_ # -- Begin function _ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_
	.p2align	4, 0x90
	.type	_ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_,@function
_ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_: # @_ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception0
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, 48(%rsp)           # 8-byte Spill
	movq	%rcx, %rbp
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	callq	_ZN12YAML_ElementC2Ev
	leaq	88(%rbx), %rdi
	leaq	104(%rbx), %rax
	movq	%rax, 32(%rsp)          # 8-byte Spill
	movq	%rax, 88(%rbx)
	movq	$0, 96(%rbx)
	movb	$0, 104(%rbx)
	leaq	120(%rbx), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	leaq	136(%rbx), %rax
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movq	%rax, 120(%rbx)
	movq	$0, 128(%rbx)
	movb	$0, 136(%rbx)
	leaq	152(%rbx), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	leaq	168(%rbx), %rax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movq	%rax, 152(%rbx)
	movq	$0, 160(%rbx)
	movb	$0, 168(%rbx)
	leaq	184(%rbx), %r14
	leaq	200(%rbx), %r13
	movq	%r13, 184(%rbx)
	movq	$0, 192(%rbx)
	movb	$0, 200(%rbx)
	movq	%rdi, 40(%rsp)          # 8-byte Spill
	movq	%r12, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
# %bb.1:
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	%r15, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
# %bb.2:
	movq	(%rsp), %rdi            # 8-byte Reload
	movq	%rbp, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
# %bb.3:
	movq	%r14, %rdi
	movq	48(%rsp), %rsi          # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
# %bb.4:
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB0_5:
	.cfi_def_cfa_offset 112
	movq	%rax, %rbp
	movq	(%r14), %rdi
	cmpq	%r13, %rdi
	je	.LBB0_7
# %bb.6:
	callq	_ZdlPv
.LBB0_7:
	movq	(%rsp), %rax            # 8-byte Reload
	movq	(%rax), %rdi
	cmpq	16(%rsp), %rdi          # 8-byte Folded Reload
	je	.LBB0_9
# %bb.8:
	callq	_ZdlPv
.LBB0_9:
	movq	8(%rsp), %rax           # 8-byte Reload
	movq	(%rax), %rdi
	cmpq	24(%rsp), %rdi          # 8-byte Folded Reload
	je	.LBB0_11
# %bb.10:
	callq	_ZdlPv
.LBB0_11:
	movq	40(%rsp), %rax          # 8-byte Reload
	movq	(%rax), %rdi
	cmpq	32(%rsp), %rdi          # 8-byte Folded Reload
	je	.LBB0_13
# %bb.12:
	callq	_ZdlPv
.LBB0_13:
	movq	%rbx, %rdi
	callq	_ZN12YAML_ElementD2Ev
	movq	%rbp, %rdi
	callq	_Unwind_Resume
.Lfunc_end0:
	.size	_ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_, .Lfunc_end0-_ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table0:
.Lexception0:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0 # >> Call Site 1 <<
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end0:
	.p2align	2
                                        # -- End function
	.section	.text._ZN12YAML_ElementC2Ev,"axG",@progbits,_ZN12YAML_ElementC2Ev,comdat
	.weak	_ZN12YAML_ElementC2Ev   # -- Begin function _ZN12YAML_ElementC2Ev
	.p2align	4, 0x90
	.type	_ZN12YAML_ElementC2Ev,@function
_ZN12YAML_ElementC2Ev:                  # @_ZN12YAML_ElementC2Ev
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r12
	movq	%r12, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	leaq	32(%rdi), %r14
	leaq	48(%rdi), %r13
	movq	%r13, 32(%rdi)
	movq	$0, 40(%rdi)
	movb	$0, 48(%rdi)
	leaq	64(%rdi), %rbp
	xorps	%xmm0, %xmm0
	movups	%xmm0, 64(%rdi)
	movq	$0, 80(%rdi)
	movl	$.L.str.3, %ecx
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%r8d, %r8d
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
# %bb.1:
	movq	40(%rbx), %rdx
	movl	$.L.str.3, %ecx
	movq	%r14, %rdi
	xorl	%esi, %esi
	xorl	%r8d, %r8d
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
# %bb.2:
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB1_3:
	.cfi_def_cfa_offset 64
	movq	%rax, %r15
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB1_5
# %bb.4:
	callq	_ZdlPv
.LBB1_5:
	movq	(%r14), %rdi
	cmpq	%r13, %rdi
	je	.LBB1_7
# %bb.6:
	callq	_ZdlPv
.LBB1_7:
	movq	(%rbx), %rdi
	cmpq	%r12, %rdi
	je	.LBB1_9
# %bb.8:
	callq	_ZdlPv
.LBB1_9:
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end1:
	.size	_ZN12YAML_ElementC2Ev, .Lfunc_end1-_ZN12YAML_ElementC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table1:
.Lexception1:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end1:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZN8YAML_DocD2Ev        # -- Begin function _ZN8YAML_DocD2Ev
	.p2align	4, 0x90
	.type	_ZN8YAML_DocD2Ev,@function
_ZN8YAML_DocD2Ev:                       # @_ZN8YAML_DocD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	184(%rdi), %rdi
	leaq	200(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB2_2
# %bb.1:
	callq	_ZdlPv
.LBB2_2:
	movq	152(%rbx), %rdi
	leaq	168(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB2_4
# %bb.3:
	callq	_ZdlPv
.LBB2_4:
	movq	120(%rbx), %rdi
	leaq	136(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB2_6
# %bb.5:
	callq	_ZdlPv
.LBB2_6:
	movq	88(%rbx), %rdi
	leaq	104(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB2_8
# %bb.7:
	callq	_ZdlPv
.LBB2_8:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN12YAML_ElementD2Ev   # TAILCALL
.Lfunc_end2:
	.size	_ZN8YAML_DocD2Ev, .Lfunc_end2-_ZN8YAML_DocD2Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8YAML_Doc12generateYAMLB5cxx11Ev # -- Begin function _ZN8YAML_Doc12generateYAMLB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZN8YAML_Doc12generateYAMLB5cxx11Ev,@function
_ZN8YAML_Doc12generateYAMLB5cxx11Ev:    # @_ZN8YAML_Doc12generateYAMLB5cxx11Ev
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception2
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$216, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, %r13
	leaq	16(%rdi), %rax
	movq	%rax, 128(%rsp)         # 8-byte Spill
	movq	%rax, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	.cfi_escape 0x2e, 0x00
	leaq	64(%rsp), %rdi
	movl	$.L.str, %edx
	movq	%r13, %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
# %bb.1:
	movq	88(%rbp), %rsi
	movq	96(%rbp), %rdx
	.cfi_escape 0x2e, 0x00
	leaq	64(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.2:
	leaq	48(%rsp), %rsi
	movq	%rsi, 32(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_4
# %bb.3:
	movq	%rdx, 32(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 48(%rsp)
	jmp	.LBB3_5
.LBB3_4:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rsi)
.LBB3_5:
	movabsq	$9223372036854775807, %r15 # imm = 0x7FFFFFFFFFFFFFFF
	movq	8(%rax), %rdx
	movq	%rdx, 40(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	cmpq	%r15, 40(%rsp)
	je	.LBB3_171
# %bb.6:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	movl	$.L.str.1, %esi
	movl	$1, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.7:
	leaq	16(%rsp), %rbx
	movq	%rbx, (%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_9
# %bb.8:
	movq	%rdx, (%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 16(%rsp)
	jmp	.LBB3_10
.LBB3_9:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbx)
.LBB3_10:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	(%rsp), %rdx
	cmpq	%rbx, %rdx
	je	.LBB3_13
# %bb.11:
	movq	(%r13), %rsi
	movq	16(%r13), %rcx
	xorl	%eax, %eax
	cmpq	128(%rsp), %rsi         # 8-byte Folded Reload
	cmovneq	%rsi, %rax
	movq	%rdx, (%r13)
	movq	8(%rsp), %rdx
	movq	%rdx, 8(%r13)
	movq	16(%rsp), %rdx
	movq	%rdx, 16(%r13)
	testq	%rax, %rax
	je	.LBB3_16
# %bb.12:
	movq	%rax, (%rsp)
	movq	%rcx, 16(%rsp)
	jmp	.LBB3_19
.LBB3_13:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_18
# %bb.14:
	movq	(%r13), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_17
# %bb.15:
	movb	16(%rsp), %al
	movb	%al, (%rdi)
	jmp	.LBB3_18
.LBB3_16:
	movq	%rbx, (%rsp)
	movq	%rbx, %rax
	jmp	.LBB3_19
.LBB3_17:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rsi
	callq	memcpy
.LBB3_18:
	movq	8(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rax
.LBB3_19:
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movq	(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB3_21
# %bb.20:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_21:
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rbx
	cmpq	%rbx, %rdi
	je	.LBB3_23
# %bb.22:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_23:
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %r14
	cmpq	%r14, %rdi
	je	.LBB3_25
# %bb.24:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_25:
	.cfi_escape 0x2e, 0x00
	leaq	64(%rsp), %rdi
	movl	$.L.str.2, %edx
	movq	%r13, %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
# %bb.26:
	movq	120(%rbp), %rsi
	movq	128(%rbp), %rdx
	.cfi_escape 0x2e, 0x00
	leaq	64(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.27:
	movq	%rbx, 32(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_29
# %bb.28:
	movq	%rdx, 32(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 48(%rsp)
	jmp	.LBB3_30
.LBB3_29:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbx)
.LBB3_30:
	movq	8(%rax), %rdx
	movq	%rdx, 40(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	cmpq	%r15, 40(%rsp)
	je	.LBB3_173
# %bb.31:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	movl	$.L.str.1, %esi
	movl	$1, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.32:
	leaq	16(%rsp), %rbx
	movq	%rbx, (%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_34
# %bb.33:
	movq	%rdx, (%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 16(%rsp)
	jmp	.LBB3_35
.LBB3_34:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbx)
.LBB3_35:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	(%rsp), %rdx
	cmpq	%rbx, %rdx
	je	.LBB3_38
# %bb.36:
	movq	(%r13), %rsi
	movq	16(%r13), %rcx
	xorl	%eax, %eax
	cmpq	128(%rsp), %rsi         # 8-byte Folded Reload
	cmovneq	%rsi, %rax
	movq	%rdx, (%r13)
	movq	8(%rsp), %rdx
	movq	%rdx, 8(%r13)
	movq	16(%rsp), %rdx
	movq	%rdx, 16(%r13)
	testq	%rax, %rax
	je	.LBB3_41
# %bb.37:
	movq	%rax, (%rsp)
	movq	%rcx, 16(%rsp)
	jmp	.LBB3_44
.LBB3_38:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_43
# %bb.39:
	movq	(%r13), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_42
# %bb.40:
	movb	16(%rsp), %al
	movb	%al, (%rdi)
	jmp	.LBB3_43
.LBB3_41:
	movq	%rbx, (%rsp)
	movq	%rbx, %rax
	jmp	.LBB3_44
.LBB3_42:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rsi
	callq	memcpy
.LBB3_43:
	movq	8(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rax
.LBB3_44:
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movq	(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB3_46
# %bb.45:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_46:
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_48
# %bb.47:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_48:
	movq	64(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB3_50
# %bb.49:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_50:
	movq	64(%rbp), %rax
	movq	%rbp, %r15
	cmpq	%rax, 72(%rbp)
	je	.LBB3_73
# %bb.51:
	leaq	160(%rsp), %r12
	leaq	16(%rsp), %rbx
	xorl	%r14d, %r14d
	leaq	32(%rsp), %rbp
	jmp	.LBB3_53
	.p2align	4, 0x90
.LBB3_52:                               #   in Loop: Header=BB3_53 Depth=1
	addq	$1, %r14
	movq	%r15, %rcx
	movq	64(%r15), %rax
	movq	72(%r15), %rcx
	subq	%rax, %rcx
	sarq	$3, %rcx
	cmpq	%rcx, %r14
	jae	.LBB3_73
.LBB3_53:                               # =>This Inner Loop Header: Depth=1
	movq	(%rax,%r14,8), %rsi
	movq	%r12, 144(%rsp)
	movq	$0, 152(%rsp)
	movb	$0, 160(%rsp)
	.cfi_escape 0x2e, 0x00
	movq	%rbp, %rdi
	leaq	144(%rsp), %rdx
	callq	_ZN12YAML_Element9printYAMLENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
# %bb.54:                               #   in Loop: Header=BB3_53 Depth=1
	movq	(%r13), %rcx
	movq	8(%r13), %r8
	.cfi_escape 0x2e, 0x00
	movq	%rbp, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
# %bb.55:                               #   in Loop: Header=BB3_53 Depth=1
	movq	%rbx, (%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_57
# %bb.56:                               #   in Loop: Header=BB3_53 Depth=1
	movq	%rdx, (%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 16(%rsp)
	jmp	.LBB3_58
	.p2align	4, 0x90
.LBB3_57:                               #   in Loop: Header=BB3_53 Depth=1
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbx)
.LBB3_58:                               #   in Loop: Header=BB3_53 Depth=1
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	(%rsp), %rdx
	cmpq	%rbx, %rdx
	je	.LBB3_61
# %bb.59:                               #   in Loop: Header=BB3_53 Depth=1
	movq	(%r13), %rsi
	movq	16(%r13), %rcx
	cmpq	128(%rsp), %rsi         # 8-byte Folded Reload
	movl	$0, %eax
	cmovneq	%rsi, %rax
	movq	%rdx, (%r13)
	movq	8(%rsp), %rdx
	movq	%rdx, 8(%r13)
	movq	16(%rsp), %rdx
	movq	%rdx, 16(%r13)
	testq	%rax, %rax
	je	.LBB3_64
# %bb.60:                               #   in Loop: Header=BB3_53 Depth=1
	movq	%rax, (%rsp)
	movq	%rcx, 16(%rsp)
	jmp	.LBB3_67
	.p2align	4, 0x90
.LBB3_61:                               #   in Loop: Header=BB3_53 Depth=1
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_66
# %bb.62:                               #   in Loop: Header=BB3_53 Depth=1
	movq	(%r13), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_65
# %bb.63:                               #   in Loop: Header=BB3_53 Depth=1
	movzbl	16(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB3_66
	.p2align	4, 0x90
.LBB3_64:                               #   in Loop: Header=BB3_53 Depth=1
	movq	%rbx, (%rsp)
	movq	%rbx, %rax
	jmp	.LBB3_67
.LBB3_65:                               #   in Loop: Header=BB3_53 Depth=1
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rsi
	callq	memcpy
.LBB3_66:                               #   in Loop: Header=BB3_53 Depth=1
	movq	8(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rax
.LBB3_67:                               #   in Loop: Header=BB3_53 Depth=1
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movq	(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB3_69
# %bb.68:                               #   in Loop: Header=BB3_53 Depth=1
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_69:                               #   in Loop: Header=BB3_53 Depth=1
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_71
# %bb.70:                               #   in Loop: Header=BB3_53 Depth=1
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_71:                               #   in Loop: Header=BB3_53 Depth=1
	movq	144(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB3_52
# %bb.72:                               #   in Loop: Header=BB3_53 Depth=1
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_52
.LBB3_73:
	.cfi_escape 0x2e, 0x00
	leaq	208(%rsp), %rbx
	movq	%rbx, %rdi
	callq	time
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	localtime
	movl	$1900, %edx             # imm = 0x76C
	addl	20(%rax), %edx
	movl	16(%rax), %ecx
	addl	$1, %ecx
	movl	12(%rax), %r8d
	movl	8(%rax), %r9d
	movl	(%rax), %ebp
	movl	4(%rax), %ebx
	.cfi_escape 0x2e, 0x10
	leaq	176(%rsp), %rdi
	movl	$.L.str.4, %esi
	movl	$0, %eax
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	callq	sprintf
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	leaq	184(%r15), %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.3, %esi
	movq	%rbx, %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
	testl	%eax, %eax
	je	.LBB3_75
# %bb.74:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	movq	%rbx, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
	leaq	80(%rsp), %rbp
	jmp	.LBB3_100
.LBB3_75:
	leaq	88(%r15), %rsi
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	movl	$.L.str.5, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
# %bb.76:
	movq	120(%r15), %rsi
	movq	128(%r15), %rdx
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.77:
	leaq	80(%rsp), %rbp
	movq	%rbp, 64(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_79
# %bb.78:
	movq	%rdx, 64(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 80(%rsp)
	jmp	.LBB3_80
.LBB3_79:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbp)
.LBB3_80:
	movq	8(%rax), %rdx
	movq	%rdx, 72(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rax, 72(%rsp)
	je	.LBB3_177
# %bb.81:
	.cfi_escape 0x2e, 0x00
	leaq	64(%rsp), %rdi
	movl	$.L.str.6, %esi
	movl	$1, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.82:
	leaq	48(%rsp), %rbx
	movq	%rbx, 32(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_84
# %bb.83:
	movq	%rdx, 32(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 48(%rsp)
	jmp	.LBB3_85
.LBB3_84:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbx)
.LBB3_85:
	movq	8(%rax), %rdx
	movq	%rdx, 40(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	32(%rsp), %rdx
	cmpq	%rbx, %rdx
	je	.LBB3_88
# %bb.86:
	movq	(%rsp), %rsi
	movq	16(%rsp), %rcx
	xorl	%eax, %eax
	cmpq	%r14, %rsi
	cmovneq	%rsi, %rax
	movq	%rdx, (%rsp)
	movq	40(%rsp), %rdx
	movq	%rdx, 8(%rsp)
	movq	48(%rsp), %rdx
	movq	%rdx, 16(%rsp)
	testq	%rax, %rax
	je	.LBB3_91
# %bb.87:
	movq	%rax, 32(%rsp)
	movq	%rcx, 48(%rsp)
	jmp	.LBB3_94
.LBB3_88:
	movq	40(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_93
# %bb.89:
	movq	(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_92
# %bb.90:
	movb	48(%rsp), %al
	movb	%al, (%rdi)
	jmp	.LBB3_93
.LBB3_91:
	movq	%rbx, 32(%rsp)
	movq	%rbx, %rax
	jmp	.LBB3_94
.LBB3_92:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rsi
	callq	memcpy
.LBB3_93:
	movq	40(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	32(%rsp), %rax
.LBB3_94:
	movq	$0, 40(%rsp)
	movb	$0, (%rax)
	movq	32(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB3_96
# %bb.95:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_96:
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB3_98
# %bb.97:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_98:
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	80(%rsp), %rbp
	je	.LBB3_100
# %bb.99:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_100:
	leaq	112(%rsp), %r12
	movq	%r12, 96(%rsp)
	.cfi_escape 0x2e, 0x00
	leaq	176(%rsp), %rdi
	callq	strlen
	movq	%rax, %rbx
	movq	%rax, 136(%rsp)
	movq	%r12, %rax
	cmpq	$16, %rbx
	jb	.LBB3_103
# %bb.101:
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	leaq	136(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
# %bb.102:
	movq	%rax, 96(%rsp)
	movq	136(%rsp), %rcx
	movq	%rcx, 112(%rsp)
.LBB3_103:
	testq	%rbx, %rbx
	je	.LBB3_107
# %bb.104:
	cmpq	$1, %rbx
	jne	.LBB3_106
# %bb.105:
	movb	176(%rsp), %cl
	movb	%cl, (%rax)
	jmp	.LBB3_107
.LBB3_106:
	.cfi_escape 0x2e, 0x00
	leaq	176(%rsp), %rsi
	movq	%rax, %rdi
	movq	%rbx, %rdx
	callq	memcpy
.LBB3_107:
	movq	136(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	96(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rcx
	movq	8(%rsp), %r8
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
# %bb.108:
	movq	%rbp, 64(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	leaq	48(%rsp), %rbx
	je	.LBB3_110
# %bb.109:
	movq	%rdx, 64(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 80(%rsp)
	jmp	.LBB3_111
.LBB3_110:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbp)
.LBB3_111:
	movq	8(%rax), %rdx
	movq	%rdx, 72(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	subq	72(%rsp), %rax
	cmpq	$4, %rax
	jbe	.LBB3_175
# %bb.112:
	.cfi_escape 0x2e, 0x00
	leaq	64(%rsp), %rdi
	movl	$.L.str.7, %esi
	movl	$5, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.113:
	movq	%rbx, 32(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_115
# %bb.114:
	movq	%rdx, 32(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 48(%rsp)
	jmp	.LBB3_116
.LBB3_115:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbx)
.LBB3_116:
	movq	8(%rax), %rdx
	movq	%rdx, 40(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	32(%rsp), %rdx
	cmpq	%rbx, %rdx
	je	.LBB3_119
# %bb.117:
	movq	(%rsp), %rsi
	movq	16(%rsp), %rcx
	xorl	%eax, %eax
	cmpq	%r14, %rsi
	cmovneq	%rsi, %rax
	movq	%rdx, (%rsp)
	movq	40(%rsp), %rdx
	movq	%rdx, 8(%rsp)
	movq	48(%rsp), %rdx
	movq	%rdx, 16(%rsp)
	testq	%rax, %rax
	je	.LBB3_122
# %bb.118:
	movq	%rax, 32(%rsp)
	movq	%rcx, 48(%rsp)
	jmp	.LBB3_125
.LBB3_119:
	movq	40(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_124
# %bb.120:
	movq	(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_123
# %bb.121:
	movb	48(%rsp), %al
	movb	%al, (%rdi)
	jmp	.LBB3_124
.LBB3_122:
	movq	%rbx, 32(%rsp)
	movq	%rbx, %rax
	jmp	.LBB3_125
.LBB3_123:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rsi
	callq	memcpy
.LBB3_124:
	movq	40(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	32(%rsp), %rax
.LBB3_125:
	movq	$0, 40(%rsp)
	movb	$0, (%rax)
	movq	32(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB3_127
# %bb.126:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_127:
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB3_129
# %bb.128:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_129:
	movq	96(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB3_131
# %bb.130:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_131:
	leaq	152(%r15), %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.3, %esi
	movq	%rbx, %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
	testl	%eax, %eax
	je	.LBB3_139
# %bb.132:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.8, %esi
	movq	%rbx, %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
	testl	%eax, %eax
	je	.LBB3_139
# %bb.133:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	movl	$.L.str.9, %esi
	movq	%rbx, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
# %bb.134:
	movq	32(%rsp), %rdi
	.cfi_escape 0x2e, 0x00
	callq	system
# %bb.135:
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	movl	$.L.str.10, %edx
	movq	%rbx, %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
# %bb.136:
	movq	184(%r15), %rsi
	movq	192(%r15), %rdx
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.137:
	movq	%rbp, 64(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB3_146
# %bb.138:
	movq	%rdx, 64(%rsp)
	movq	16(%rax), %rdx
	movq	%rdx, 80(%rsp)
	jmp	.LBB3_147
.LBB3_139:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	movq	%rsp, %rdx
	movl	$.L.str.11, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
# %bb.140:
	movq	32(%rsp), %rsi
	leaq	48(%rsp), %rbx
	cmpq	%rbx, %rsi
	je	.LBB3_143
# %bb.141:
	movq	(%rsp), %rdx
	movq	16(%rsp), %rcx
	xorl	%eax, %eax
	cmpq	%r14, %rdx
	cmovneq	%rdx, %rax
	movq	%rsi, (%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, 8(%rsp)
	testq	%rax, %rax
	je	.LBB3_153
# %bb.142:
	movq	%rax, 32(%rsp)
	movq	%rcx, 48(%rsp)
	jmp	.LBB3_157
.LBB3_143:
	movq	40(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_156
# %bb.144:
	movq	(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_155
# %bb.145:
	movb	(%rsi), %al
	movb	%al, (%rdi)
	jmp	.LBB3_156
.LBB3_146:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbp)
.LBB3_147:
	movq	8(%rax), %rdx
	movq	%rdx, 72(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	64(%rsp), %rdx
	cmpq	%rbp, %rdx
	je	.LBB3_150
# %bb.148:
	movq	(%rsp), %rsi
	movq	16(%rsp), %rcx
	xorl	%eax, %eax
	cmpq	%r14, %rsi
	cmovneq	%rsi, %rax
	movq	%rdx, (%rsp)
	movq	72(%rsp), %rdx
	movq	%rdx, 8(%rsp)
	movq	80(%rsp), %rdx
	movq	%rdx, 16(%rsp)
	testq	%rax, %rax
	je	.LBB3_154
# %bb.149:
	movq	%rax, 64(%rsp)
	movq	%rcx, 80(%rsp)
	jmp	.LBB3_161
.LBB3_150:
	movq	72(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB3_160
# %bb.151:
	movq	(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB3_159
# %bb.152:
	movb	80(%rsp), %al
	movb	%al, (%rdi)
	jmp	.LBB3_160
.LBB3_153:
	movq	%rbx, 32(%rsp)
	movq	%rbx, %rax
	jmp	.LBB3_157
.LBB3_154:
	movq	%rbp, 64(%rsp)
	movq	%rbp, %rax
	jmp	.LBB3_161
.LBB3_155:
	.cfi_escape 0x2e, 0x00
	callq	memcpy
.LBB3_156:
	movq	40(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	32(%rsp), %rax
.LBB3_157:
	movq	$0, 40(%rsp)
	movb	$0, (%rax)
	movq	32(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB3_168
# %bb.158:
	.cfi_escape 0x2e, 0x00
	jmp	.LBB3_167
.LBB3_159:
	.cfi_escape 0x2e, 0x00
	movq	%rbp, %rsi
	callq	memcpy
.LBB3_160:
	movq	72(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	64(%rsp), %rax
.LBB3_161:
	movq	$0, 72(%rsp)
	movb	$0, (%rax)
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB3_163
# %bb.162:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_163:
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_165
# %bb.164:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_165:
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_168
# %bb.166:
	.cfi_escape 0x2e, 0x00
.LBB3_167:
	callq	_ZdlPv
.LBB3_168:
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB3_170
# %bb.169:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_170:
	movq	%r13, %rax
	addq	$216, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB3_171:
	.cfi_def_cfa_offset 272
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.13, %edi
	callq	_ZSt20__throw_length_errorPKc
# %bb.172:
.LBB3_173:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.13, %edi
	callq	_ZSt20__throw_length_errorPKc
# %bb.174:
.LBB3_175:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.13, %edi
	callq	_ZSt20__throw_length_errorPKc
# %bb.176:
.LBB3_177:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.13, %edi
	callq	_ZSt20__throw_length_errorPKc
# %bb.178:
.LBB3_179:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB3_182
# %bb.180:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_182
.LBB3_181:
	movq	%rax, %rbx
.LBB3_182:
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_203
# %bb.183:
	.cfi_escape 0x2e, 0x00
	jmp	.LBB3_202
.LBB3_184:
	jmp	.LBB3_196
.LBB3_185:
	movq	%rax, %rbx
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_190
# %bb.186:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_190
.LBB3_187:
	jmp	.LBB3_189
.LBB3_188:
.LBB3_189:
	movq	%rax, %rbx
.LBB3_190:
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_203
# %bb.191:
	.cfi_escape 0x2e, 0x00
	jmp	.LBB3_202
.LBB3_192:
	jmp	.LBB3_196
.LBB3_193:
	jmp	.LBB3_196
.LBB3_194:
	jmp	.LBB3_196
.LBB3_195:
.LBB3_196:
	movq	%rax, %rbx
	jmp	.LBB3_203
.LBB3_197:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB3_200
# %bb.198:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_200
.LBB3_199:
	movq	%rax, %rbx
.LBB3_200:
	movq	96(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB3_203
# %bb.201:
	.cfi_escape 0x2e, 0x00
.LBB3_202:
	callq	_ZdlPv
.LBB3_203:
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB3_223
# %bb.204:
	.cfi_escape 0x2e, 0x00
	jmp	.LBB3_222
.LBB3_205:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_210
# %bb.206:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_210
.LBB3_207:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_214
# %bb.208:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_214
.LBB3_209:
	movq	%rax, %rbx
.LBB3_210:
	movq	64(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB3_223
# %bb.211:
	.cfi_escape 0x2e, 0x00
	jmp	.LBB3_222
.LBB3_212:
	movq	%rax, %rbx
	jmp	.LBB3_223
.LBB3_213:
	movq	%rax, %rbx
.LBB3_214:
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_223
# %bb.215:
	.cfi_escape 0x2e, 0x00
	jmp	.LBB3_222
.LBB3_216:
	movq	%rax, %rbx
	jmp	.LBB3_223
.LBB3_217:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_220
# %bb.218:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB3_220
.LBB3_219:
	movq	%rax, %rbx
.LBB3_220:
	movq	144(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB3_223
# %bb.221:
	.cfi_escape 0x2e, 0x00
.LBB3_222:
	callq	_ZdlPv
.LBB3_223:
	movq	(%r13), %rdi
	cmpq	128(%rsp), %rdi         # 8-byte Folded Reload
	je	.LBB3_225
# %bb.224:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB3_225:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.Lfunc_end3:
	.size	_ZN8YAML_Doc12generateYAMLB5cxx11Ev, .Lfunc_end3-_ZN8YAML_Doc12generateYAMLB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table3:
.Lexception2:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end2:
	.p2align	2
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception3
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rdi, %r12
	leaq	16(%rdi), %r13
	movq	%r13, (%rdi)
	movq	(%rsi), %r15
	movq	8(%rsi), %rbx
	testq	%r15, %r15
	jne	.LBB4_2
# %bb.1:
	testq	%rbx, %rbx
	jne	.LBB4_16
.LBB4_2:
	movq	%rbx, 8(%rsp)
	movq	%r13, %rax
	cmpq	$16, %rbx
	jb	.LBB4_4
# %bb.3:
	leaq	8(%rsp), %rsi
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, (%r12)
	movq	8(%rsp), %rcx
	movq	%rcx, 16(%r12)
.LBB4_4:
	testq	%rbx, %rbx
	je	.LBB4_8
# %bb.5:
	cmpq	$1, %rbx
	jne	.LBB4_7
# %bb.6:
	movb	(%r15), %cl
	movb	%cl, (%rax)
	jmp	.LBB4_8
.LBB4_7:
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	memcpy
.LBB4_8:
	movq	8(%rsp), %rax
	movq	%rax, 8(%r12)
	movq	(%r12), %rcx
	movb	$0, (%rcx,%rax)
	movq	%r14, %rdi
	callq	strlen
	movabsq	$9223372036854775807, %rcx # imm = 0x7FFFFFFFFFFFFFFF
	subq	8(%r12), %rcx
	cmpq	%rax, %rcx
	jae	.LBB4_14
# %bb.9:
	movl	$.L.str.13, %edi
	callq	_ZSt20__throw_length_errorPKc
# %bb.10:
.LBB4_11:
	movq	%rax, %rbx
	movq	(%r12), %rdi
	cmpq	%r13, %rdi
	je	.LBB4_13
# %bb.12:
	callq	_ZdlPv
.LBB4_13:
	movq	%rbx, %rdi
	callq	_Unwind_Resume
.LBB4_14:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
# %bb.15:
	movq	%r12, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB4_16:
	.cfi_def_cfa_offset 64
	movl	$.L.str.12, %edi
	callq	_ZSt19__throw_logic_errorPKc
.Lfunc_end4:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_, .Lfunc_end4-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table4:
.Lexception3:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin3-.Lfunc_begin3 # >> Call Site 1 <<
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end3:
	.p2align	2
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception4
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%r15, %rdi
	callq	strlen
	movq	%rax, %r12
	movq	%rbx, %r13
	addq	$16, %r13
	movq	%r13, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	movq	8(%r14), %rsi
	addq	%r12, %rsi
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	jmp	.LBB5_1
.LBB5_1:
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	subq	8(%rbx), %rax
	cmpq	%r12, %rax
	jae	.LBB5_4
# %bb.2:
	movl	$.L.str.13, %edi
	callq	_ZSt20__throw_length_errorPKc
	jmp	.LBB5_3
.LBB5_3:
.LBB5_4:
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
	jmp	.LBB5_5
.LBB5_5:
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
	jmp	.LBB5_9
.LBB5_6:
                                        # kill: killed $rdx
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r13, %rdi
	je	.LBB5_8
# %bb.7:
	callq	_ZdlPv
.LBB5_8:
	movq	%r14, %rdi
	callq	_Unwind_Resume
.LBB5_9:
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end5:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_, .Lfunc_end5-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table5:
.Lexception4:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.byte	0                       #   On action: cleanup
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end4:
	.p2align	2
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _GLOBAL__sub_I_YAML_Doc.cpp
	.type	_GLOBAL__sub_I_YAML_Doc.cpp,@function
_GLOBAL__sub_I_YAML_Doc.cpp:            # @_GLOBAL__sub_I_YAML_Doc.cpp
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	$_ZStL8__ioinit, %edi
	callq	_ZNSt8ios_base4InitC1Ev
	movl	$_ZNSt8ios_base4InitD1Ev, %edi
	movl	$_ZStL8__ioinit, %esi
	movl	$__dso_handle, %edx
	popq	%rax
	.cfi_def_cfa_offset 8
	jmp	__cxa_atexit            # TAILCALL
.Lfunc_end6:
	.size	_GLOBAL__sub_I_YAML_Doc.cpp, .Lfunc_end6-_GLOBAL__sub_I_YAML_Doc.cpp
	.cfi_endproc
                                        # -- End function
	.type	_ZStL8__ioinit,@object  # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.hidden	__dso_handle
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"Mini-Application Name: "
	.size	.L.str, 24

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"\n"
	.size	.L.str.1, 2

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"Mini-Application Version: "
	.size	.L.str.2, 27

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.zero	1
	.size	.L.str.3, 1

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"%04d:%02d:%02d-%02d:%02d:%02d"
	.size	.L.str.4, 30

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"-"
	.size	.L.str.5, 2

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"_"
	.size	.L.str.6, 2

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	".yaml"
	.size	.L.str.7, 6

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"."
	.size	.L.str.8, 2

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"mkdir "
	.size	.L.str.9, 7

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"/"
	.size	.L.str.10, 2

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"./"
	.size	.L.str.11, 3

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"basic_string::_M_construct null not valid"
	.size	.L.str.12, 42

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"basic_string::append"
	.size	.L.str.13, 21

	.section	.init_array,"aw",@init_array
	.p2align	3
	.quad	_GLOBAL__sub_I_YAML_Doc.cpp

	.globl	_ZN8YAML_DocC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_
	.type	_ZN8YAML_DocC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_,@function
.set _ZN8YAML_DocC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_, _ZN8YAML_DocC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_
	.globl	_ZN8YAML_DocD1Ev
	.type	_ZN8YAML_DocD1Ev,@function
.set _ZN8YAML_DocD1Ev, _ZN8YAML_DocD2Ev
	.ident	"clang version 10.0.0 (https://github.com/yechunliang/llvm-project.git 315c344fffc1c681b3257413b1b992675aa6fb89)"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _GLOBAL__sub_I_YAML_Doc.cpp
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZStL8__ioinit
	.addrsig_sym __dso_handle
