; ModuleID = 'test3.ll'
source_filename = "/home/chris/test-suite/MultiSource/Benchmarks/7zip/CPP/7zip/Archive/SwfHandler.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tagSTATPROPSTG = type { i32*, i32, i16 }
%"struct.NArchive::NSwf::CRegisterSwf" = type { i8 }
%struct.IInArchive = type { %struct.IUnknown }
%struct.IUnknown = type { i32 (...)** }
%struct.IOutArchive = type { %struct.IUnknown }
%struct.GUID = type { i32, i16, i16, [8 x i8] }
%"class.NArchive::NSwf::CHandler" = type { %struct.IInArchive, %struct.IArchiveOpenSeq, %class.CMyUnknownImp, %class.CObjectVector, i64 }
%struct.IArchiveOpenSeq = type { %struct.IUnknown }
%class.CMyUnknownImp = type { i32 }
%class.CObjectVector = type { %class.CRecordVector }
%class.CRecordVector = type { %class.CBaseRecordVector }
%class.CBaseRecordVector = type { i32 (...)**, i32, i32, i8*, i64 }
%struct.tagPROPVARIANT = type { i16, i16, i16, i16, %union.anon }
%union.anon = type { %struct.LARGE_INTEGER }
%struct.LARGE_INTEGER = type { i64 }
%"class.NWindows::NCOM::CPropVariant" = type { %struct.tagPROPVARIANT }
%"struct.NArchive::NSwf::CTag" = type { i32, %class.CBuffer }
%class.CBuffer = type { i32 (...)**, i64, i8* }
%struct.IInStream = type { %struct.ISequentialInStream }
%struct.ISequentialInStream = type { %struct.IUnknown }
%struct.IArchiveOpenCallback = type { %struct.IUnknown }
%"struct.NArchive::NSwf::CBitReader" = type <{ %class.CInBuffer*, i32, i8, [3 x i8] }>
%class.CInBuffer = type <{ i8*, i8*, i8*, %class.CMyComPtr, i64, i32, i8, [3 x i8] }>
%class.CMyComPtr = type { %struct.ISequentialInStream* }
%struct.IArchiveExtractCallback = type { %struct.IProgress }
%struct.IProgress = type { %struct.IUnknown }
%class.CMyComPtr.1 = type { %struct.ICompressProgressInfo* }
%struct.ICompressProgressInfo = type { %struct.IUnknown }
%class.CMyComPtr.2 = type { %struct.ISequentialOutStream* }
%struct.ISequentialOutStream = type { %struct.IUnknown }
%class.CLocalProgress = type <{ %struct.ICompressProgressInfo, %class.CMyUnknownImp, [4 x i8], %class.CMyComPtr.0, %class.CMyComPtr.1, i8, [7 x i8], i64, i64, i64, i8, i8, [6 x i8] }>
%class.CMyComPtr.0 = type { %struct.IProgress* }
%struct.CArcInfo = type { i32*, i32*, i32*, i8, [28 x i8], i32, i8, %struct.IInArchive* ()*, %struct.IOutArchive* ()* }

$_ZN8NWindows4NCOM12CPropVariantC2Ev = comdat any

$_ZN8NWindows4NCOM12CPropVariantD2Ev = comdat any

$_ZNK17CBaseRecordVector4SizeEv = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEixEi = comdat any

$_ZNK7CBufferIhE11GetCapacityEv = comdat any

$_ZN9CInBuffer8ReadByteEv = comdat any

$_ZN8NArchive4NSwf10CBitReaderC2Ev = comdat any

$_ZNK9CInBuffer16GetProcessedSizeEv = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE3AddERKS2_ = comdat any

$_ZN8NArchive4NSwf4CTagC2Ev = comdat any

$_ZN8NArchive4NSwf4CTagD2Ev = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE4BackEv = comdat any

$_ZN7CBufferIhE11SetCapacityEm = comdat any

$_ZN9CInBuffer9ReadBytesEPhj = comdat any

$_ZN7CBufferIhEcvPhEv = comdat any

$_ZN9CInBufferD2Ev = comdat any

$_ZN9CMyComPtrI21ICompressProgressInfoEC2EPS0_ = comdat any

$_ZN9CMyComPtrI20ISequentialOutStreamEC2Ev = comdat any

$_ZN9CMyComPtrI20ISequentialOutStreamEadEv = comdat any

$_ZNK9CMyComPtrI20ISequentialOutStreamEntEv = comdat any

$_ZNK9CMyComPtrI20ISequentialOutStreamEcvPS0_Ev = comdat any

$_ZNK7CBufferIhEcvPKhEv = comdat any

$_ZN9CMyComPtrI20ISequentialOutStreamE7ReleaseEv = comdat any

$_ZN9CMyComPtrI20ISequentialOutStreamED2Ev = comdat any

$_ZN9CMyComPtrI21ICompressProgressInfoED2Ev = comdat any

$_ZN8NArchive4NSwf12CRegisterSwfC2Ev = comdat any

$_ZN8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv = comdat any

$_ZN8NArchive4NSwf8CHandler6AddRefEv = comdat any

$_ZN8NArchive4NSwf8CHandler7ReleaseEv = comdat any

$_ZN8NArchive4NSwf8CHandlerD2Ev = comdat any

$_ZN8NArchive4NSwf8CHandlerD0Ev = comdat any

$_ZThn8_N8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv = comdat any

$_ZThn8_N8NArchive4NSwf8CHandler6AddRefEv = comdat any

$_ZThn8_N8NArchive4NSwf8CHandler7ReleaseEv = comdat any

$_ZThn8_N8NArchive4NSwf8CHandlerD1Ev = comdat any

$_ZThn8_N8NArchive4NSwf8CHandlerD0Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN9CInBuffer8ReadByteERh = comdat any

$_ZN7CBufferIhEC2Ev = comdat any

$_ZN7CBufferIhED2Ev = comdat any

$_ZN7CBufferIhED0Ev = comdat any

$_ZN9CMyComPtrI19ISequentialInStreamED2Ev = comdat any

$_ZN8NArchive4NSwf8CHandlerC2Ev = comdat any

$_ZN10IInArchiveC2Ev = comdat any

$_ZN15IArchiveOpenSeqC2Ev = comdat any

$_ZN13CMyUnknownImpC2Ev = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEC2Ev = comdat any

$_ZN8IUnknownC2Ev = comdat any

$_ZN8IUnknownD2Ev = comdat any

$_ZN10IInArchiveD0Ev = comdat any

$_ZN8IUnknownD0Ev = comdat any

$_ZN15IArchiveOpenSeqD0Ev = comdat any

$_ZN13CRecordVectorIPvEC2Ev = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED2Ev = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED0Ev = comdat any

$_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE6DeleteEii = comdat any

$_ZN17CBaseRecordVectorC2Em = comdat any

$_ZN13CRecordVectorIPvED0Ev = comdat any

$_ZNK17CBaseRecordVector22TestIndexAndCorrectNumEiRi = comdat any

$_ZeqRK4GUIDS1_ = comdat any

$_ZN13CRecordVectorIPvEixEi = comdat any

$_ZN13CRecordVectorIPvE3AddES0_ = comdat any

$_ZN8NArchive4NSwf4CTagC2ERKS1_ = comdat any

$_ZN7CBufferIhEC2ERKS0_ = comdat any

$_ZN7CBufferIhEaSERKS0_ = comdat any

$_ZN7CBufferIhE4FreeEv = comdat any

$_Z5MyMinImET_S0_S0_ = comdat any

$_ZTS10IInArchive = comdat any

$_ZTS8IUnknown = comdat any

$_ZTI8IUnknown = comdat any

$_ZTI10IInArchive = comdat any

$_ZTS15IArchiveOpenSeq = comdat any

$_ZTI15IArchiveOpenSeq = comdat any

$_ZTS13CMyUnknownImp = comdat any

$_ZTI13CMyUnknownImp = comdat any

$_ZTV7CBufferIhE = comdat any

$_ZTS7CBufferIhE = comdat any

$_ZTI7CBufferIhE = comdat any

$_ZTV10IInArchive = comdat any

$_ZTV8IUnknown = comdat any

$_ZTV15IArchiveOpenSeq = comdat any

$_ZTV13CObjectVectorIN8NArchive4NSwf4CTagEE = comdat any

$_ZTS13CObjectVectorIN8NArchive4NSwf4CTagEE = comdat any

$_ZTS13CRecordVectorIPvE = comdat any

$_ZTI13CRecordVectorIPvE = comdat any

$_ZTI13CObjectVectorIN8NArchive4NSwf4CTagEE = comdat any

$_ZTV13CRecordVectorIPvE = comdat any

@_ZN8NArchive4NSwf6kPropsE = dso_local local_unnamed_addr global [3 x %struct.tagSTATPROPSTG] [%struct.tagSTATPROPSTG { i32* null, i32 3, i16 8 }, %struct.tagSTATPROPSTG { i32* null, i32 7, i16 21 }, %struct.tagSTATPROPSTG { i32* null, i32 28, i16 8 }], align 16
@_ZN8NArchive4NSwfL9g_TagDescE = internal unnamed_addr constant [92 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* null, i8* null, i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* null, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0)], align 16
@_ZTIPKc = external dso_local constant i8*
@_ZN8NArchive4NSwfL13g_RegisterArcE = internal global %"struct.NArchive::NSwf::CRegisterSwf" zeroinitializer, align 1
@_ZTVN8NArchive4NSwf8CHandlerE = dso_local unnamed_addr constant { [18 x i8*], [8 x i8*] } { [18 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTIN8NArchive4NSwf8CHandlerE to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, %struct.GUID*, i8**)* @_ZN8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*)* @_ZN8NArchive4NSwf8CHandler6AddRefEv to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*)* @_ZN8NArchive4NSwf8CHandler7ReleaseEv to i8*), i8* bitcast (void (%"class.NArchive::NSwf::CHandler"*)* @_ZN8NArchive4NSwf8CHandlerD2Ev to i8*), i8* bitcast (void (%"class.NArchive::NSwf::CHandler"*)* @_ZN8NArchive4NSwf8CHandlerD0Ev to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, %struct.IInStream*, i64*, %struct.IArchiveOpenCallback*)* @_ZN8NArchive4NSwf8CHandler4OpenEP9IInStreamPKyP20IArchiveOpenCallback to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*)* @_ZN8NArchive4NSwf8CHandler5CloseEv to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32*)* @_ZN8NArchive4NSwf8CHandler16GetNumberOfItemsEPj to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32, i32, %struct.tagPROPVARIANT*)* @_ZN8NArchive4NSwf8CHandler11GetPropertyEjjP14tagPROPVARIANT to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32*, i32, i32, %struct.IArchiveExtractCallback*)* @_ZN8NArchive4NSwf8CHandler7ExtractEPKjjiP23IArchiveExtractCallback to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32, %struct.tagPROPVARIANT*)* @_ZN8NArchive4NSwf8CHandler18GetArchivePropertyEjP14tagPROPVARIANT to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32*)* @_ZN8NArchive4NSwf8CHandler21GetNumberOfPropertiesEPj to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32, i32**, i32*, i16*)* @_ZN8NArchive4NSwf8CHandler15GetPropertyInfoEjPPwPjPt to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32*)* @_ZN8NArchive4NSwf8CHandler28GetNumberOfArchivePropertiesEPj to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, i32, i32**, i32*, i16*)* @_ZN8NArchive4NSwf8CHandler22GetArchivePropertyInfoEjPPwPjPt to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, %struct.ISequentialInStream*)* @_ZN8NArchive4NSwf8CHandler7OpenSeqEP19ISequentialInStream to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTIN8NArchive4NSwf8CHandlerE to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, %struct.GUID*, i8**)* @_ZThn8_N8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*)* @_ZThn8_N8NArchive4NSwf8CHandler6AddRefEv to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*)* @_ZThn8_N8NArchive4NSwf8CHandler7ReleaseEv to i8*), i8* bitcast (void (%"class.NArchive::NSwf::CHandler"*)* @_ZThn8_N8NArchive4NSwf8CHandlerD1Ev to i8*), i8* bitcast (void (%"class.NArchive::NSwf::CHandler"*)* @_ZThn8_N8NArchive4NSwf8CHandlerD0Ev to i8*), i8* bitcast (i32 (%"class.NArchive::NSwf::CHandler"*, %struct.ISequentialInStream*)* @_ZThn8_N8NArchive4NSwf8CHandler7OpenSeqEP19ISequentialInStream to i8*)] }, align 8
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN8NArchive4NSwf8CHandlerE = dso_local constant [26 x i8] c"N8NArchive4NSwf8CHandlerE\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTS10IInArchive = linkonce_odr dso_local constant [13 x i8] c"10IInArchive\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTS8IUnknown = linkonce_odr dso_local constant [10 x i8] c"8IUnknown\00", comdat, align 1
@_ZTI8IUnknown = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8IUnknown, i32 0, i32 0) }, comdat, align 8
@_ZTI10IInArchive = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10IInArchive, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI8IUnknown to i8*) }, comdat, align 8
@_ZTS15IArchiveOpenSeq = linkonce_odr dso_local constant [18 x i8] c"15IArchiveOpenSeq\00", comdat, align 1
@_ZTI15IArchiveOpenSeq = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTS15IArchiveOpenSeq, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI8IUnknown to i8*) }, comdat, align 8
@_ZTS13CMyUnknownImp = linkonce_odr dso_local constant [16 x i8] c"13CMyUnknownImp\00", comdat, align 1
@_ZTI13CMyUnknownImp = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZTS13CMyUnknownImp, i32 0, i32 0) }, comdat, align 8
@_ZTIN8NArchive4NSwf8CHandlerE = dso_local constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN8NArchive4NSwf8CHandlerE, i32 0, i32 0), i32 1, i32 3, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10IInArchive to i8*), i64 2, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15IArchiveOpenSeq to i8*), i64 2050, i8* bitcast ({ i8*, i8* }* @_ZTI13CMyUnknownImp to i8*), i64 4098 }, align 8
@.str = private unnamed_addr constant [4 x i8] c"End\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"ShowFrame\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"DefineShape\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"PlaceObject\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"RemoveObject\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"DefineBits\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"DefineButton\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"JPEGTables\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"SetBackgroundColor\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"DefineFont\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"DefineText\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"DoAction\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"DefineFontInfo\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"DefineSound\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"StartSound\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"DefineButtonSound\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"SoundStreamHead\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"SoundStreamBlock\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"DefineBitsLossless\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"DefineBitsJPEG2\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"DefineShape2\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"DefineButtonCxform\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"Protect\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"PlaceObject2\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"RemoveObject2\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"DefineShape3\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"DefineText2\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"DefineButton2\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"DefineBitsJPEG3\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"DefineBitsLossless2\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"DefineEditText\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"DefineSprite\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"41\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"FrameLabel\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"SoundStreamHead2\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"DefineMorphShape\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"DefineFont2\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"ExportAssets\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"ImportAssets\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"EnableDebugger\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"DoInitAction\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"DefineVideoStream\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"VideoFrame\00", align 1
@.str.43 = private unnamed_addr constant [16 x i8] c"DefineFontInfo2\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"EnableDebugger2\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"ScriptLimits\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"SetTabIndex\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"FileAttributes\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"PlaceObject3\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"ImportAssets2\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"DefineFontAlignZones\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"CSMTextSettings\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"DefineFont3\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"SymbolClass\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"Metadata\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"DefineScalingGrid\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"DoABC\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"DefineShape4\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"DefineMorphShape2\00", align 1
@.str.59 = private unnamed_addr constant [29 x i8] c"DefineSceneAndFrameLabelData\00", align 1
@.str.60 = private unnamed_addr constant [17 x i8] c"DefineBinaryData\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"DefineFontName\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"StartSound2\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"DefineBitsJPEG4\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"DefineFont4\00", align 1
@_ZTIi = external dso_local constant i8*
@_ZTV7CBufferIhE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI7CBufferIhE to i8*), i8* bitcast (void (%class.CBuffer*)* @_ZN7CBufferIhED2Ev to i8*), i8* bitcast (void (%class.CBuffer*)* @_ZN7CBufferIhED0Ev to i8*)] }, comdat, align 8
@_ZTS7CBufferIhE = linkonce_odr dso_local constant [12 x i8] c"7CBufferIhE\00", comdat, align 1
@_ZTI7CBufferIhE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZTS7CBufferIhE, i32 0, i32 0) }, comdat, align 8
@.str.65 = private unnamed_addr constant [4 x i32] [i32 83, i32 87, i32 70, i32 0], align 4
@.str.66 = private unnamed_addr constant [4 x i32] [i32 115, i32 119, i32 102, i32 0], align 4
@_ZN8NArchive4NSwfL9g_ArcInfoE = internal global { i32*, i32*, i32*, i8, <{ i8, i8, i8, [25 x i8] }>, i32, i8, %struct.IInArchive* ()*, %struct.IOutArchive* ()* } { i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.65, i32 0, i32 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.66, i32 0, i32 0), i32* null, i8 -41, <{ i8, i8, i8, [25 x i8] }> <{ i8 70, i8 87, i8 83, [25 x i8] zeroinitializer }>, i32 3, i8 1, %struct.IInArchive* ()* @_ZN8NArchive4NSwfL9CreateArcEv, %struct.IOutArchive* ()* null }, align 8
@_ZTV10IInArchive = linkonce_odr dso_local unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10IInArchive to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%struct.IUnknown*)* @_ZN8IUnknownD2Ev to i8*), i8* bitcast (void (%struct.IInArchive*)* @_ZN10IInArchiveD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV8IUnknown = linkonce_odr dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI8IUnknown to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%struct.IUnknown*)* @_ZN8IUnknownD2Ev to i8*), i8* bitcast (void (%struct.IUnknown*)* @_ZN8IUnknownD0Ev to i8*)] }, comdat, align 8
@_ZTV15IArchiveOpenSeq = linkonce_odr dso_local unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI15IArchiveOpenSeq to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%struct.IUnknown*)* @_ZN8IUnknownD2Ev to i8*), i8* bitcast (void (%struct.IArchiveOpenSeq*)* @_ZN15IArchiveOpenSeqD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV13CObjectVectorIN8NArchive4NSwf4CTagEE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13CObjectVectorIN8NArchive4NSwf4CTagEE to i8*), i8* bitcast (void (%class.CObjectVector*)* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED2Ev to i8*), i8* bitcast (void (%class.CObjectVector*)* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED0Ev to i8*), i8* bitcast (void (%class.CObjectVector*, i32, i32)* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE6DeleteEii to i8*)] }, comdat, align 8
@_ZTS13CObjectVectorIN8NArchive4NSwf4CTagEE = linkonce_odr dso_local constant [39 x i8] c"13CObjectVectorIN8NArchive4NSwf4CTagEE\00", comdat, align 1
@_ZTS13CRecordVectorIPvE = linkonce_odr dso_local constant [20 x i8] c"13CRecordVectorIPvE\00", comdat, align 1
@_ZTI17CBaseRecordVector = external dso_local constant i8*
@_ZTI13CRecordVectorIPvE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS13CRecordVectorIPvE, i32 0, i32 0), i8* bitcast (i8** @_ZTI17CBaseRecordVector to i8*) }, comdat, align 8
@_ZTI13CObjectVectorIN8NArchive4NSwf4CTagEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTS13CObjectVectorIN8NArchive4NSwf4CTagEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13CRecordVectorIPvE to i8*) }, comdat, align 8
@_ZTV13CRecordVectorIPvE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI13CRecordVectorIPvE to i8*), i8* bitcast (void (%class.CBaseRecordVector*)* @_ZN17CBaseRecordVectorD2Ev to i8*), i8* bitcast (void (%class.CRecordVector*)* @_ZN13CRecordVectorIPvED0Ev to i8*), i8* bitcast (void (%class.CBaseRecordVector*, i32, i32)* @_ZN17CBaseRecordVector6DeleteEii to i8*)] }, comdat, align 8
@_ZTV17CBaseRecordVector = available_externally dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast (i8** @_ZTI17CBaseRecordVector to i8*), i8* bitcast (void (%class.CBaseRecordVector*)* @_ZN17CBaseRecordVectorD1Ev to i8*), i8* bitcast (void (%class.CBaseRecordVector*)* @_ZN17CBaseRecordVectorD0Ev to i8*), i8* bitcast (void (%class.CBaseRecordVector*, i32, i32)* @_ZN17CBaseRecordVector6DeleteEii to i8*)] }, align 8
@IID_IUnknown = external dso_local global %struct.GUID, align 4
@IID_IInArchive = external dso_local global %struct.GUID, align 4
@IID_IArchiveOpenSeq = external dso_local global %struct.GUID, align 4
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_SwfHandler.cpp, i8* null }]

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local i32 @_ZN8NArchive4NSwf8CHandler21GetNumberOfPropertiesEPj(%"class.NArchive::NSwf::CHandler"* nocapture readnone %this, i32* nocapture %numProperties) unnamed_addr #0 align 2 {
entry:
  store i32 3, i32* %numProperties, align 4, !tbaa !2
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler15GetPropertyInfoEjPPwPjPt(%"class.NArchive::NSwf::CHandler"* nocapture readnone %this, i32 %index, i32** nocapture %name, i32* nocapture %propID, i16* nocapture %varType) unnamed_addr #1 align 2 {
entry:
  %cmp = icmp ugt i32 %index, 2
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %conv = zext i32 %index to i64
  %propid = getelementptr inbounds [3 x %struct.tagSTATPROPSTG], [3 x %struct.tagSTATPROPSTG]* @_ZN8NArchive4NSwf6kPropsE, i64 0, i64 %conv, i32 1
  %0 = load i32, i32* %propid, align 8, !tbaa !6
  store i32 %0, i32* %propID, align 4, !tbaa !2
  %vt = getelementptr inbounds [3 x %struct.tagSTATPROPSTG], [3 x %struct.tagSTATPROPSTG]* @_ZN8NArchive4NSwf6kPropsE, i64 0, i64 %conv, i32 2
  %1 = load i16, i16* %vt, align 4, !tbaa !10
  store i16 %1, i16* %varType, align 2, !tbaa !11
  store i32* null, i32** %name, align 8, !tbaa !12
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -2147024809, %entry ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local i32 @_ZN8NArchive4NSwf8CHandler28GetNumberOfArchivePropertiesEPj(%"class.NArchive::NSwf::CHandler"* nocapture readnone %this, i32* nocapture %numProperties) unnamed_addr #0 align 2 {
entry:
  store i32 0, i32* %numProperties, align 4, !tbaa !2
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler22GetArchivePropertyInfoEjPPwPjPt(%"class.NArchive::NSwf::CHandler"* nocapture readnone %this, i32 %0, i32** nocapture readnone %1, i32* nocapture readnone %2, i16* nocapture readnone %3) unnamed_addr #3 align 2 {
entry:
  ret i32 -2147467263
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler18GetArchivePropertyEjP14tagPROPVARIANT(%"class.NArchive::NSwf::CHandler"* nocapture readonly %this, i32 %propID, %struct.tagPROPVARIANT* %value) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %prop = alloca %"class.NWindows::NCOM::CPropVariant", align 8
  %0 = bitcast %"class.NWindows::NCOM::CPropVariant"* %prop to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #17
  call void @_ZN8NWindows4NCOM12CPropVariantC2Ev(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop)
  %cond = icmp eq i32 %propID, 44
  br i1 %cond, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %entry
  %_packSize = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 4
  %1 = load i64, i64* %_packSize, align 8, !tbaa !13
  %call = invoke dereferenceable(16) %"class.NWindows::NCOM::CPropVariant"* @_ZN8NWindows4NCOM12CPropVariantaSEy(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop, i64 %1)
          to label %sw.epilog unwind label %lpad

lpad:                                             ; preds = %sw.epilog, %sw.bb
  %2 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN8NWindows4NCOM12CPropVariantD2Ev(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #17
  resume { i8*, i32 } %2

sw.epilog:                                        ; preds = %sw.bb, %entry
  %call3 = invoke i32 @_ZN8NWindows4NCOM12CPropVariant6DetachEP14tagPROPVARIANT(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop, %struct.tagPROPVARIANT* %value)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %sw.epilog
  call void @_ZN8NWindows4NCOM12CPropVariantD2Ev(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #17
  ret i32 0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN8NWindows4NCOM12CPropVariantC2Ev(%"class.NWindows::NCOM::CPropVariant"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %vt = getelementptr %"class.NWindows::NCOM::CPropVariant", %"class.NWindows::NCOM::CPropVariant"* %this, i64 0, i32 0, i32 0
  store i16 0, i16* %vt, align 8, !tbaa !17
  %wReserved1 = getelementptr %"class.NWindows::NCOM::CPropVariant", %"class.NWindows::NCOM::CPropVariant"* %this, i64 0, i32 0, i32 1
  store i16 0, i16* %wReserved1, align 2, !tbaa !19
  ret void
}

declare dso_local dereferenceable(16) %"class.NWindows::NCOM::CPropVariant"* @_ZN8NWindows4NCOM12CPropVariantaSEy(%"class.NWindows::NCOM::CPropVariant"*, i64) local_unnamed_addr #6

declare dso_local i32 @__gxx_personality_v0(...)

declare dso_local i32 @_ZN8NWindows4NCOM12CPropVariant6DetachEP14tagPROPVARIANT(%"class.NWindows::NCOM::CPropVariant"*, %struct.tagPROPVARIANT*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN8NWindows4NCOM12CPropVariantD2Ev(%"class.NWindows::NCOM::CPropVariant"* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call = invoke i32 @_ZN8NWindows4NCOM12CPropVariant5ClearEv(%"class.NWindows::NCOM::CPropVariant"* %this)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  tail call void @__clang_call_terminate(i8* %1) #18
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler16GetNumberOfItemsEPj(%"class.NArchive::NSwf::CHandler"* %this, i32* nocapture %numItems) unnamed_addr #5 align 2 {
entry:
  %0 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3, i32 0, i32 0
  %call = tail call i32 @_ZNK17CBaseRecordVector4SizeEv(%class.CBaseRecordVector* %0)
  store i32 %call, i32* %numItems, align 4, !tbaa !2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i32 @_ZNK17CBaseRecordVector4SizeEv(%class.CBaseRecordVector* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_size = getelementptr inbounds %class.CBaseRecordVector, %class.CBaseRecordVector* %this, i64 0, i32 2
  %0 = load i32, i32* %_size, align 4, !tbaa !20
  ret i32 %0
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler11GetPropertyEjjP14tagPROPVARIANT(%"class.NArchive::NSwf::CHandler"* %this, i32 %index, i32 %propID, %struct.tagPROPVARIANT* %value) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %prop = alloca %"class.NWindows::NCOM::CPropVariant", align 8
  %s = alloca [32 x i8], align 16
  %0 = bitcast %"class.NWindows::NCOM::CPropVariant"* %prop to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #17
  call void @_ZN8NWindows4NCOM12CPropVariantC2Ev(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop)
  %_tags = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3
  %call = invoke dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEixEi(%class.CObjectVector* nonnull %_tags, i32 %index)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  switch i32 %propID, label %sw.epilog [
    i32 3, label %sw.bb
    i32 7, label %sw.bb12
    i32 8, label %sw.bb12
    i32 28, label %sw.bb17
  ]

lpad:                                             ; preds = %sw.epilog, %sw.bb12, %entry
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  br label %ehcleanup31

sw.bb:                                            ; preds = %invoke.cont
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %s, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #17
  invoke void @_Z21ConvertUInt32ToStringjPc(i32 %index, i8* nonnull %4)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %sw.bb
  %call5 = call i64 @strlen(i8* nonnull %4) #19
  %inc = add i64 %call5, 1
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %s, i64 0, i64 %call5
  store i8 46, i8* %arrayidx, align 1, !tbaa !23
  %Type = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call, i64 0, i32 0
  %5 = load i32, i32* %Type, align 8, !tbaa !24
  %add.ptr = getelementptr inbounds [32 x i8], [32 x i8]* %s, i64 0, i64 %inc
  invoke void @_Z21ConvertUInt32ToStringjPc(i32 %5, i8* nonnull %add.ptr)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont3
  %call11 = invoke dereferenceable(16) %"class.NWindows::NCOM::CPropVariant"* @_ZN8NWindows4NCOM12CPropVariantaSEPKc(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop, i8* nonnull %4)
          to label %invoke.cont10 unwind label %lpad7

invoke.cont10:                                    ; preds = %invoke.cont8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #17
  br label %sw.epilog

lpad2:                                            ; preds = %sw.bb
  %6 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad7:                                            ; preds = %invoke.cont8, %invoke.cont3
  %7 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad7, %lpad2
  %.sink47 = phi { i8*, i32 } [ %7, %lpad7 ], [ %6, %lpad2 ]
  %8 = extractvalue { i8*, i32 } %.sink47, 0
  %9 = extractvalue { i8*, i32 } %.sink47, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #17
  br label %ehcleanup31

sw.bb12:                                          ; preds = %invoke.cont, %invoke.cont
  %Buf = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call, i64 0, i32 1
  %call14 = call i64 @_ZNK7CBufferIhE11GetCapacityEv(%class.CBuffer* nonnull %Buf)
  %call16 = invoke dereferenceable(16) %"class.NWindows::NCOM::CPropVariant"* @_ZN8NWindows4NCOM12CPropVariantaSEy(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop, i64 %call14)
          to label %sw.epilog unwind label %lpad

sw.bb17:                                          ; preds = %invoke.cont
  %Type18 = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call, i64 0, i32 0
  %10 = load i32, i32* %Type18, align 8, !tbaa !24
  %cmp = icmp ult i32 %10, 92
  br i1 %cmp, label %if.then, label %sw.epilog

if.then:                                          ; preds = %sw.bb17
  %conv = zext i32 %10 to i64
  %arrayidx21 = getelementptr inbounds [92 x i8*], [92 x i8*]* @_ZN8NArchive4NSwfL9g_TagDescE, i64 0, i64 %conv
  %11 = load i8*, i8** %arrayidx21, align 8, !tbaa !12
  %cmp22 = icmp eq i8* %11, null
  br i1 %cmp22, label %sw.epilog, label %if.then23

if.then23:                                        ; preds = %if.then
  %call26 = invoke dereferenceable(16) %"class.NWindows::NCOM::CPropVariant"* @_ZN8NWindows4NCOM12CPropVariantaSEPKc(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop, i8* nonnull %11)
          to label %sw.epilog unwind label %lpad24

lpad24:                                           ; preds = %if.then23
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  br label %ehcleanup31

sw.epilog:                                        ; preds = %if.then23, %if.then, %sw.bb17, %sw.bb12, %invoke.cont10, %invoke.cont
  %call30 = invoke i32 @_ZN8NWindows4NCOM12CPropVariant6DetachEP14tagPROPVARIANT(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop, %struct.tagPROPVARIANT* %value)
          to label %invoke.cont29 unwind label %lpad

invoke.cont29:                                    ; preds = %sw.epilog
  call void @_ZN8NWindows4NCOM12CPropVariantD2Ev(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #17
  ret i32 0

ehcleanup31:                                      ; preds = %lpad24, %ehcleanup, %lpad
  %ehselector.slot.1 = phi i32 [ %3, %lpad ], [ %14, %lpad24 ], [ %9, %ehcleanup ]
  %exn.slot.1 = phi i8* [ %2, %lpad ], [ %13, %lpad24 ], [ %8, %ehcleanup ]
  call void @_ZN8NWindows4NCOM12CPropVariantD2Ev(%"class.NWindows::NCOM::CPropVariant"* nonnull %prop) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #17
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val34 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.1, 1
  resume { i8*, i32 } %lpad.val34
}

; Function Attrs: uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEixEi(%class.CObjectVector* %this, i32 %index) local_unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0
  %call = tail call dereferenceable(8) i8** @_ZN13CRecordVectorIPvEixEi(%class.CRecordVector* %0, i32 %index)
  %1 = bitcast i8** %call to %"struct.NArchive::NSwf::CTag"**
  %2 = load %"struct.NArchive::NSwf::CTag"*, %"struct.NArchive::NSwf::CTag"** %1, align 8, !tbaa !12
  ret %"struct.NArchive::NSwf::CTag"* %2
}

declare dso_local void @_Z21ConvertUInt32ToStringjPc(i32, i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare dso_local dereferenceable(16) %"class.NWindows::NCOM::CPropVariant"* @_ZN8NWindows4NCOM12CPropVariantaSEPKc(%"class.NWindows::NCOM::CPropVariant"*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK7CBufferIhE11GetCapacityEv(%class.CBuffer* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_capacity = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 1
  %0 = load i64, i64* %_capacity, align 8, !tbaa !27
  ret i64 %0
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler4OpenEP9IInStreamPKyP20IArchiveOpenCallback(%"class.NArchive::NSwf::CHandler"* %this, %struct.IInStream* %stream, i64* nocapture readnone %0, %struct.IArchiveOpenCallback* %callback) unnamed_addr #4 align 2 {
entry:
  %1 = getelementptr %struct.IInStream, %struct.IInStream* %stream, i64 0, i32 0
  %call = tail call i32 @_ZN8NArchive4NSwf8CHandler8OpenSeq2EP19ISequentialInStreamP20IArchiveOpenCallback(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %1, %struct.IArchiveOpenCallback* %callback)
  ret i32 %call
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler8OpenSeq2EP19ISequentialInStreamP20IArchiveOpenCallback(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %stream, %struct.IArchiveOpenCallback* %callback) local_unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call = invoke i32 @_ZN8NArchive4NSwf8CHandler8OpenSeq3EP19ISequentialInStreamP20IArchiveOpenCallback(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %stream, %struct.IArchiveOpenCallback* %callback)
          to label %try.cont unwind label %lpad

lpad:                                             ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  %2 = tail call i8* @__cxa_begin_catch(i8* %1) #17
  tail call void @__cxa_end_catch()
  br label %try.cont

try.cont:                                         ; preds = %lpad, %entry
  %res.0 = phi i32 [ 1, %lpad ], [ %call, %entry ]
  ret i32 %res.0
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf10CBitReader8ReadBitsEj(%"struct.NArchive::NSwf::CBitReader"* nocapture %this, i32 %numBits) local_unnamed_addr #4 align 2 {
entry:
  %cmp36 = icmp eq i32 %numBits, 0
  br i1 %cmp36, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %NumBits = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 1
  %stream = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 0
  %Val = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 2
  %Val18 = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 2
  %.pr = load i32, i32* %NumBits, align 8, !tbaa !28
  %phitmp = icmp eq i32 %.pr, 0
  br label %while.body

while.body:                                       ; preds = %if.else, %while.body.lr.ph
  %0 = phi i1 [ %phitmp, %while.body.lr.ph ], [ true, %if.else ]
  %res.038 = phi i32 [ 0, %while.body.lr.ph ], [ %or20, %if.else ]
  %numBits.addr.037 = phi i32 [ %numBits, %while.body.lr.ph ], [ %sub22, %if.else ]
  br i1 %0, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %1 = load %class.CInBuffer*, %class.CInBuffer** %stream, align 8, !tbaa !30
  %call = tail call zeroext i8 @_ZN9CInBuffer8ReadByteEv(%class.CInBuffer* %1)
  store i8 %call, i8* %Val, align 4, !tbaa !31
  store i32 8, i32* %NumBits, align 8, !tbaa !28
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %2 = load i32, i32* %NumBits, align 8, !tbaa !28
  %cmp5 = icmp ugt i32 %numBits.addr.037, %2
  br i1 %cmp5, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  %shl = shl i32 %res.038, %numBits.addr.037
  %sub = sub i32 %2, %numBits.addr.037
  store i32 %sub, i32* %NumBits, align 8, !tbaa !28
  %Val8 = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 2
  %3 = load i8, i8* %Val8, align 4, !tbaa !31
  %conv = zext i8 %3 to i32
  %shr = lshr i32 %conv, %sub
  %or = or i32 %shr, %shl
  %notmask = shl nsw i32 -1, %sub
  %4 = trunc i32 %notmask to i8
  %5 = xor i8 %4, -1
  %conv15 = and i8 %3, %5
  store i8 %conv15, i8* %Val8, align 4, !tbaa !31
  br label %while.end

if.else:                                          ; preds = %if.end
  %shl17 = shl i32 %res.038, %2
  %6 = load i8, i8* %Val18, align 4, !tbaa !31
  %conv19 = zext i8 %6 to i32
  %or20 = or i32 %shl17, %conv19
  %sub22 = sub i32 %numBits.addr.037, %2
  store i32 0, i32* %NumBits, align 8, !tbaa !28
  %cmp = icmp eq i32 %sub22, 0
  br i1 %cmp, label %while.end, label %while.body

while.end:                                        ; preds = %if.else, %if.then6, %entry
  %res.1 = phi i32 [ %or, %if.then6 ], [ 0, %entry ], [ %or20, %if.else ]
  ret i32 %res.1
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i8 @_ZN9CInBuffer8ReadByteEv(%class.CInBuffer* %this) local_unnamed_addr #4 comdat align 2 {
entry:
  %_buffer = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 0
  %0 = load i8*, i8** %_buffer, align 8, !tbaa !32
  %_bufferLimit = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 1
  %1 = load i8*, i8** %_bufferLimit, align 8, !tbaa !36
  %cmp = icmp ult i8* %0, %1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call zeroext i8 @_ZN9CInBuffer10ReadBlock2Ev(%class.CInBuffer* nonnull %this)
  br label %return

if.end:                                           ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1
  store i8* %incdec.ptr, i8** %_buffer, align 8, !tbaa !32
  %2 = load i8, i8* %0, align 1, !tbaa !23
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ %2, %if.end ]
  ret i8 %retval.0
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler8OpenSeq3EP19ISequentialInStreamP20IArchiveOpenCallback(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %stream, %struct.IArchiveOpenCallback* %callback) local_unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %s = alloca %class.CInBuffer, align 8
  %br = alloca %"struct.NArchive::NSwf::CBitReader", align 8
  %offset = alloca i64, align 8
  %ref.tmp = alloca %"struct.NArchive::NSwf::CTag", align 8
  %numItems = alloca i64, align 8
  %0 = bitcast %class.CInBuffer* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %0) #17
  call void @_ZN9CInBufferC1Ev(%class.CInBuffer* nonnull %s)
  %call = invoke zeroext i1 @_ZN9CInBuffer6CreateEj(%class.CInBuffer* nonnull %s, i32 1048576)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  br i1 %call, label %if.end, label %cleanup104

lpad:                                             ; preds = %invoke.cont20, %invoke.cont18, %invoke.cont16, %invoke.cont2, %if.end, %entry
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  br label %ehcleanup105

if.end:                                           ; preds = %invoke.cont
  invoke void @_ZN9CInBuffer9SetStreamEP19ISequentialInStream(%class.CInBuffer* nonnull %s, %struct.ISequentialInStream* %stream)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %if.end
  invoke void @_ZN9CInBuffer4InitEv(%class.CInBuffer* nonnull %s)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont2
  %4 = bitcast %"struct.NArchive::NSwf::CBitReader"* %br to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #17
  call void @_ZN8NArchive4NSwf10CBitReaderC2Ev(%"struct.NArchive::NSwf::CBitReader"* nonnull %br)
  %stream6 = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %br, i64 0, i32 0
  store %class.CInBuffer* %s, %class.CInBuffer** %stream6, align 8, !tbaa !30
  %call9 = invoke i32 @_ZN8NArchive4NSwf10CBitReader8ReadBitsEj(%"struct.NArchive::NSwf::CBitReader"* nonnull %br, i32 5)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont3
  %call11 = invoke i32 @_ZN8NArchive4NSwf10CBitReader8ReadBitsEj(%"struct.NArchive::NSwf::CBitReader"* nonnull %br, i32 %call9)
          to label %invoke.cont10 unwind label %lpad7

invoke.cont10:                                    ; preds = %invoke.cont8
  %call13 = invoke i32 @_ZN8NArchive4NSwf10CBitReader8ReadBitsEj(%"struct.NArchive::NSwf::CBitReader"* nonnull %br, i32 %call9)
          to label %invoke.cont12 unwind label %lpad7

invoke.cont12:                                    ; preds = %invoke.cont10
  %call15 = invoke i32 @_ZN8NArchive4NSwf10CBitReader8ReadBitsEj(%"struct.NArchive::NSwf::CBitReader"* nonnull %br, i32 %call9)
          to label %invoke.cont14 unwind label %lpad7

invoke.cont14:                                    ; preds = %invoke.cont12
  %call17 = invoke i32 @_ZN8NArchive4NSwf10CBitReader8ReadBitsEj(%"struct.NArchive::NSwf::CBitReader"* nonnull %br, i32 %call9)
          to label %invoke.cont16 unwind label %lpad7

invoke.cont16:                                    ; preds = %invoke.cont14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #17
  %call19 = invoke fastcc zeroext i16 @_ZN8NArchive4NSwfL6Read16ER9CInBuffer(%class.CInBuffer* nonnull dereferenceable(48) %s)
          to label %invoke.cont18 unwind label %lpad

invoke.cont18:                                    ; preds = %invoke.cont16
  %call21 = invoke fastcc zeroext i16 @_ZN8NArchive4NSwfL6Read16ER9CInBuffer(%class.CInBuffer* nonnull dereferenceable(48) %s)
          to label %invoke.cont20 unwind label %lpad

invoke.cont20:                                    ; preds = %invoke.cont18
  %_tags = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3
  %5 = getelementptr %class.CObjectVector, %class.CObjectVector* %_tags, i64 0, i32 0, i32 0
  invoke void @_ZN17CBaseRecordVector5ClearEv(%class.CBaseRecordVector* nonnull %5)
          to label %for.cond.preheader unwind label %lpad

for.cond.preheader:                               ; preds = %invoke.cont20
  %6 = bitcast i64* %offset to i8*
  %7 = bitcast %"struct.NArchive::NSwf::CTag"* %ref.tmp to i8*
  %tobool = icmp eq %struct.IArchiveOpenCallback* %callback, null
  %8 = bitcast i64* %numItems to i8*
  %9 = bitcast %struct.IArchiveOpenCallback* %callback to i32 (%struct.IArchiveOpenCallback*, i64*, i64*)***
  br label %for.cond

for.cond:                                         ; preds = %cleanup91, %for.cond.preheader
  %offsetPrev.0 = phi i64 [ %offsetPrev.4, %cleanup91 ], [ 0, %for.cond.preheader ]
  %retval.0 = phi i32 [ %retval.4, %cleanup91 ], [ undef, %for.cond.preheader ]
  %call25 = invoke fastcc zeroext i16 @_ZN8NArchive4NSwfL6Read16ER9CInBuffer(%class.CInBuffer* nonnull dereferenceable(48) %s)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %for.cond
  %conv = zext i16 %call25 to i32
  %shr = lshr i32 %conv, 6
  %and = and i32 %conv, 63
  %cmp = icmp eq i32 %and, 63
  br i1 %cmp, label %if.then26, label %if.end30

if.then26:                                        ; preds = %invoke.cont24
  %call29 = invoke fastcc i32 @_ZN8NArchive4NSwfL6Read32ER9CInBuffer(%class.CInBuffer* nonnull dereferenceable(48) %s)
          to label %if.end30 unwind label %lpad27

lpad7:                                            ; preds = %invoke.cont14, %invoke.cont12, %invoke.cont10, %invoke.cont8, %invoke.cont3
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #17
  br label %ehcleanup105

lpad23:                                           ; preds = %for.cond
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  br label %ehcleanup105

lpad27:                                           ; preds = %if.then26
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  br label %ehcleanup105

if.end30:                                         ; preds = %if.then26, %invoke.cont24
  %length.0 = phi i32 [ %and, %invoke.cont24 ], [ %call29, %if.then26 ]
  %cmp31 = icmp eq i32 %shr, 0
  br i1 %cmp31, label %for.end, label %if.end33

if.end33:                                         ; preds = %if.end30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %call36 = call i64 @_ZNK9CInBuffer16GetProcessedSizeEv(%class.CInBuffer* nonnull %s)
  %conv37 = zext i32 %length.0 to i64
  %add = add i64 %call36, %conv37
  store i64 %add, i64* %offset, align 8, !tbaa !37
  %cmp38 = icmp ugt i64 %add, 1073741824
  br i1 %cmp38, label %cleanup91.thread142, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end33
  %call41 = call i32 @_ZNK17CBaseRecordVector4SizeEv(%class.CBaseRecordVector* nonnull %5)
  %cmp42 = icmp sgt i32 %call41, 8388607
  br i1 %cmp42, label %cleanup91.thread142, label %if.end44

if.end44:                                         ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %7, i8 0, i64 32, i1 false)
  invoke void @_ZN8NArchive4NSwf4CTagC2Ev(%"struct.NArchive::NSwf::CTag"* nonnull %ref.tmp)
          to label %invoke.cont47 unwind label %lpad46

invoke.cont47:                                    ; preds = %if.end44
  %call50 = invoke i32 @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE3AddERKS2_(%class.CObjectVector* nonnull %_tags, %"struct.NArchive::NSwf::CTag"* nonnull dereferenceable(32) %ref.tmp)
          to label %invoke.cont49 unwind label %lpad48

invoke.cont49:                                    ; preds = %invoke.cont47
  call void @_ZN8NArchive4NSwf4CTagD2Ev(%"struct.NArchive::NSwf::CTag"* nonnull %ref.tmp) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #17
  %call56 = invoke dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE4BackEv(%class.CObjectVector* nonnull %_tags)
          to label %invoke.cont55 unwind label %lpad54

invoke.cont55:                                    ; preds = %invoke.cont49
  %Type = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call56, i64 0, i32 0
  store i32 %shr, i32* %Type, align 8, !tbaa !24
  %Buf = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call56, i64 0, i32 1
  invoke void @_ZN7CBufferIhE11SetCapacityEm(%class.CBuffer* nonnull %Buf, i64 %conv37)
          to label %invoke.cont58 unwind label %lpad54

invoke.cont58:                                    ; preds = %invoke.cont55
  %call61 = call i8* @_ZN7CBufferIhEcvPhEv(%class.CBuffer* nonnull %Buf)
  %call63 = invoke i32 @_ZN9CInBuffer9ReadBytesEPhj(%class.CInBuffer* nonnull %s, i8* %call61, i32 %length.0)
          to label %invoke.cont62 unwind label %lpad54

invoke.cont62:                                    ; preds = %invoke.cont58
  %cmp64 = icmp eq i32 %call63, %length.0
  br i1 %cmp64, label %if.end66, label %cleanup91.thread142

lpad46:                                           ; preds = %if.end44
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  br label %ehcleanup52

lpad48:                                           ; preds = %invoke.cont47
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  call void @_ZN8NArchive4NSwf4CTagD2Ev(%"struct.NArchive::NSwf::CTag"* nonnull %ref.tmp) #17
  br label %ehcleanup52

ehcleanup52:                                      ; preds = %lpad48, %lpad46
  %ehselector.slot.0 = phi i32 [ %24, %lpad48 ], [ %21, %lpad46 ]
  %exn.slot.0 = phi i8* [ %23, %lpad48 ], [ %20, %lpad46 ]
  %25 = bitcast %"struct.NArchive::NSwf::CTag"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #17
  br label %ehcleanup90

lpad54:                                           ; preds = %invoke.cont58, %invoke.cont55, %invoke.cont49
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  br label %ehcleanup90

if.end66:                                         ; preds = %invoke.cont62
  br i1 %tobool, label %if.end86, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end66
  %29 = load i64, i64* %offset, align 8, !tbaa !37
  %add67 = add i64 %offsetPrev.0, 1048576
  %cmp68 = icmp ult i64 %29, %add67
  br i1 %cmp68, label %if.end86, label %if.then69

if.then69:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %call73 = call i32 @_ZNK17CBaseRecordVector4SizeEv(%class.CBaseRecordVector* nonnull %5)
  %conv74 = sext i32 %call73 to i64
  store i64 %conv74, i64* %numItems, align 8, !tbaa !37
  %vtable = load i32 (%struct.IArchiveOpenCallback*, i64*, i64*)**, i32 (%struct.IArchiveOpenCallback*, i64*, i64*)*** %9, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IArchiveOpenCallback*, i64*, i64*)*, i32 (%struct.IArchiveOpenCallback*, i64*, i64*)** %vtable, i64 6
  %30 = load i32 (%struct.IArchiveOpenCallback*, i64*, i64*)*, i32 (%struct.IArchiveOpenCallback*, i64*, i64*)** %vfn, align 8
  %call77 = invoke i32 %30(%struct.IArchiveOpenCallback* nonnull %callback, i64* nonnull %numItems, i64* nonnull %offset)
          to label %invoke.cont76 unwind label %lpad75

invoke.cont76:                                    ; preds = %if.then69
  %cmp78 = icmp eq i32 %call77, 0
  %not.cmp78 = xor i1 %cmp78, true
  %. = zext i1 %not.cmp78 to i32
  %31 = load i64, i64* %offset, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  br i1 %cmp78, label %if.end86, label %cleanup91

lpad75:                                           ; preds = %if.then69
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = bitcast i64* %numItems to i8*
  %34 = extractvalue { i8*, i32 } %32, 0
  %35 = extractvalue { i8*, i32 } %32, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  br label %ehcleanup90

if.end86:                                         ; preds = %invoke.cont76, %land.lhs.true, %if.end66
  %offsetPrev.2 = phi i64 [ %31, %invoke.cont76 ], [ %offsetPrev.0, %land.lhs.true ], [ %offsetPrev.0, %if.end66 ]
  br label %cleanup91

cleanup91.thread142:                              ; preds = %invoke.cont62, %lor.lhs.false, %if.end33
  %36 = bitcast i64* %offset to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %cleanup104

cleanup91:                                        ; preds = %if.end86, %invoke.cont76
  %offsetPrev.4 = phi i64 [ %offsetPrev.2, %if.end86 ], [ %offsetPrev.0, %invoke.cont76 ]
  %cleanup.dest.slot.3 = phi i32 [ 0, %if.end86 ], [ %., %invoke.cont76 ]
  %retval.4 = phi i32 [ %retval.0, %if.end86 ], [ %call77, %invoke.cont76 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %cond = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond, label %for.cond, label %cleanup104

ehcleanup90:                                      ; preds = %lpad75, %lpad54, %ehcleanup52
  %ehselector.slot.2 = phi i32 [ %ehselector.slot.0, %ehcleanup52 ], [ %35, %lpad75 ], [ %28, %lpad54 ]
  %exn.slot.2 = phi i8* [ %exn.slot.0, %ehcleanup52 ], [ %34, %lpad75 ], [ %27, %lpad54 ]
  %37 = bitcast i64* %offset to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  br label %ehcleanup105

for.end:                                          ; preds = %if.end30
  %call101 = call i64 @_ZNK9CInBuffer16GetProcessedSizeEv(%class.CInBuffer* nonnull %s)
  %_packSize = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 4
  store i64 %call101, i64* %_packSize, align 8, !tbaa !13
  br label %cleanup104

cleanup104:                                       ; preds = %for.end, %cleanup91, %cleanup91.thread142, %invoke.cont
  %retval.7 = phi i32 [ -2147024882, %invoke.cont ], [ 0, %for.end ], [ 1, %cleanup91.thread142 ], [ %retval.4, %cleanup91 ]
  call void @_ZN9CInBufferD2Ev(%class.CInBuffer* nonnull %s) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #17
  ret i32 %retval.7

ehcleanup105:                                     ; preds = %ehcleanup90, %lpad27, %lpad23, %lpad7, %lpad
  %ehselector.slot.5 = phi i32 [ %3, %lpad ], [ %12, %lpad7 ], [ %15, %lpad23 ], [ %ehselector.slot.2, %ehcleanup90 ], [ %18, %lpad27 ]
  %exn.slot.5 = phi i8* [ %2, %lpad ], [ %11, %lpad7 ], [ %14, %lpad23 ], [ %exn.slot.2, %ehcleanup90 ], [ %17, %lpad27 ]
  call void @_ZN9CInBufferD2Ev(%class.CInBuffer* nonnull %s) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %0) #17
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.5, 0
  %lpad.val108 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.5, 1
  resume { i8*, i32 } %lpad.val108
}

declare dso_local void @_ZN9CInBufferC1Ev(%class.CInBuffer*) unnamed_addr #6

declare dso_local zeroext i1 @_ZN9CInBuffer6CreateEj(%class.CInBuffer*, i32) local_unnamed_addr #6

declare dso_local void @_ZN9CInBuffer9SetStreamEP19ISequentialInStream(%class.CInBuffer*, %struct.ISequentialInStream*) local_unnamed_addr #6

declare dso_local void @_ZN9CInBuffer4InitEv(%class.CInBuffer*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf10CBitReaderC2Ev(%"struct.NArchive::NSwf::CBitReader"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %NumBits = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 1
  store i32 0, i32* %NumBits, align 8, !tbaa !28
  %Val = getelementptr inbounds %"struct.NArchive::NSwf::CBitReader", %"struct.NArchive::NSwf::CBitReader"* %this, i64 0, i32 2
  store i8 0, i8* %Val, align 4, !tbaa !31
  ret void
}

; Function Attrs: uwtable
define internal fastcc zeroext i16 @_ZN8NArchive4NSwfL6Read16ER9CInBuffer(%class.CInBuffer* dereferenceable(48) %stream) unnamed_addr #4 {
entry:
  %b = alloca i8, align 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end
  ret i16 %conv3

for.body:                                         ; preds = %if.end, %entry
  %i.011 = phi i32 [ 0, %entry ], [ %inc, %if.end ]
  %res.010 = phi i16 [ 0, %entry ], [ %conv3, %if.end ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %b) #17
  %call = call zeroext i1 @_ZN9CInBuffer8ReadByteERh(%class.CInBuffer* nonnull %stream, i8* nonnull dereferenceable(1) %b)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %exception = call i8* @__cxa_allocate_exception(i64 4) #17
  %0 = bitcast i8* %exception to i32*
  store i32 1, i32* %0, align 16, !tbaa !2
  call void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTIi to i8*), i8* null) #20
  unreachable

if.end:                                           ; preds = %for.body
  %1 = load i8, i8* %b, align 1, !tbaa !23
  %conv1 = zext i8 %1 to i32
  %mul = shl nuw nsw i32 %i.011, 3
  %shl = shl nuw nsw i32 %conv1, %mul
  %2 = trunc i32 %shl to i16
  %conv3 = or i16 %res.010, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %b) #17
  %inc = add nuw nsw i32 %i.011, 1
  %exitcond = icmp eq i32 %inc, 2
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

declare dso_local void @_ZN17CBaseRecordVector5ClearEv(%class.CBaseRecordVector*) local_unnamed_addr #6

; Function Attrs: uwtable
define internal fastcc i32 @_ZN8NArchive4NSwfL6Read32ER9CInBuffer(%class.CInBuffer* dereferenceable(48) %stream) unnamed_addr #4 {
entry:
  %b = alloca i8, align 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end
  ret i32 %or

for.body:                                         ; preds = %if.end, %entry
  %i.08 = phi i32 [ 0, %entry ], [ %inc, %if.end ]
  %res.07 = phi i32 [ 0, %entry ], [ %or, %if.end ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %b) #17
  %call = call zeroext i1 @_ZN9CInBuffer8ReadByteERh(%class.CInBuffer* nonnull %stream, i8* nonnull dereferenceable(1) %b)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %exception = call i8* @__cxa_allocate_exception(i64 4) #17
  %0 = bitcast i8* %exception to i32*
  store i32 1, i32* %0, align 16, !tbaa !2
  call void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTIi to i8*), i8* null) #20
  unreachable

if.end:                                           ; preds = %for.body
  %1 = load i8, i8* %b, align 1, !tbaa !23
  %conv = zext i8 %1 to i32
  %mul = shl nuw nsw i32 %i.08, 3
  %shl = shl nuw i32 %conv, %mul
  %or = or i32 %shl, %res.07
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %b) #17
  %inc = add nuw nsw i32 %i.08, 1
  %exitcond = icmp eq i32 %inc, 4
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK9CInBuffer16GetProcessedSizeEv(%class.CInBuffer* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_processedSize = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 4
  %0 = load i64, i64* %_processedSize, align 8, !tbaa !40
  %1 = bitcast %class.CInBuffer* %this to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !32
  %_bufferBase = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 2
  %3 = bitcast i8** %_bufferBase to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !41
  %sub.ptr.sub = add i64 %2, %0
  %add = sub i64 %sub.ptr.sub, %4
  ret i64 %add
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE3AddERKS2_(%class.CObjectVector* %this, %"struct.NArchive::NSwf::CTag"* dereferenceable(32) %item) local_unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call = tail call dereferenceable(32) i8* @_Znwm(i64 32) #21
  %0 = bitcast i8* %call to %"struct.NArchive::NSwf::CTag"*
  invoke void @_ZN8NArchive4NSwf4CTagC2ERKS1_(%"struct.NArchive::NSwf::CTag"* nonnull %0, %"struct.NArchive::NSwf::CTag"* nonnull dereferenceable(32) %item)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0
  %call2 = tail call i32 @_ZN13CRecordVectorIPvE3AddES0_(%class.CRecordVector* %1, i8* nonnull %call)
  ret i32 %call2

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %call) #22
  resume { i8*, i32 } %2
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf4CTagC2Ev(%"struct.NArchive::NSwf::CTag"* %this) unnamed_addr #8 comdat align 2 {
entry:
  %Buf = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %this, i64 0, i32 1
  tail call void @_ZN7CBufferIhEC2Ev(%class.CBuffer* nonnull %Buf)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf4CTagD2Ev(%"struct.NArchive::NSwf::CTag"* %this) unnamed_addr #9 comdat align 2 {
entry:
  %Buf = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %this, i64 0, i32 1
  tail call void @_ZN7CBufferIhED2Ev(%class.CBuffer* nonnull %Buf) #17
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE4BackEv(%class.CObjectVector* %this) local_unnamed_addr #4 comdat align 2 {
entry:
  %_size = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0, i32 0, i32 2
  %0 = load i32, i32* %_size, align 4, !tbaa !20
  %sub = add nsw i32 %0, -1
  %call = tail call dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEixEi(%class.CObjectVector* %this, i32 %sub)
  ret %"struct.NArchive::NSwf::CTag"* %call
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN7CBufferIhE11SetCapacityEm(%class.CBuffer* %this, i64 %newCapacity) local_unnamed_addr #4 comdat align 2 {
entry:
  %_capacity = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 1
  %0 = load i64, i64* %_capacity, align 8, !tbaa !27
  %cmp = icmp eq i64 %0, %newCapacity
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i64 %newCapacity, 0
  br i1 %cmp2, label %if.end10, label %if.then3

if.then3:                                         ; preds = %if.end
  %call = tail call i8* @_Znam(i64 %newCapacity) #21
  %cmp5 = icmp eq i64 %0, 0
  br i1 %cmp5, label %if.end10, label %if.then6

if.then6:                                         ; preds = %if.then3
  %_items = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %1 = load i8*, i8** %_items, align 8, !tbaa !42
  %call8 = tail call i64 @_Z5MyMinImET_S0_S0_(i64 %0, i64 %newCapacity)
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %call, i8* align 1 %1, i64 %call8, i1 false)
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.then3, %if.end
  %newBuffer.0 = phi i8* [ %call, %if.then6 ], [ %call, %if.then3 ], [ null, %if.end ]
  %_items11 = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %2 = load i8*, i8** %_items11, align 8, !tbaa !42
  %isnull = icmp eq i8* %2, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end10
  tail call void @_ZdaPv(i8* nonnull %2) #22
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end10
  store i8* %newBuffer.0, i8** %_items11, align 8, !tbaa !42
  store i64 %newCapacity, i64* %_capacity, align 8, !tbaa !27
  br label %return

return:                                           ; preds = %delete.end, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZN9CInBuffer9ReadBytesEPhj(%class.CInBuffer* %this, i8* %buf, i32 %size) local_unnamed_addr #4 comdat align 2 {
entry:
  %_bufferLimit = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 1
  %0 = bitcast i8** %_bufferLimit to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !36
  %_buffer = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 0
  %2 = bitcast %class.CInBuffer* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !32
  %sub.ptr.sub = sub i64 %1, %3
  %conv = trunc i64 %sub.ptr.sub to i32
  %cmp = icmp ult i32 %conv, %size
  br i1 %cmp, label %for.body11.preheader, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp941 = icmp eq i32 %size, 0
  %4 = load i8*, i8** %_buffer, align 8, !tbaa !32
  br i1 %cmp941, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count51 = zext i32 %size to i64
  br label %for.body

for.body11.preheader:                             ; preds = %entry
  %wide.trip.count = zext i32 %size to i64
  br label %for.body11

for.cond.cleanup:                                 ; preds = %for.body, %for.cond.preheader
  %.lcssa = phi i8* [ %4, %for.cond.preheader ], [ %7, %for.body ]
  %idx.ext = zext i32 %size to i64
  %add.ptr = getelementptr inbounds i8, i8* %.lcssa, i64 %idx.ext
  store i8* %add.ptr, i8** %_buffer, align 8, !tbaa !32
  ret i32 %size

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv49 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next50, %for.body ]
  %5 = phi i8* [ %4, %for.body.preheader ], [ %7, %for.body ]
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %indvars.iv49
  %6 = load i8, i8* %arrayidx, align 1, !tbaa !23
  %arrayidx5 = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv49
  store i8 %6, i8* %arrayidx5, align 1, !tbaa !23
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1
  %7 = load i8*, i8** %_buffer, align 8, !tbaa !32
  %exitcond52 = icmp eq i64 %indvars.iv.next50, %wide.trip.count51
  br i1 %exitcond52, label %for.cond.cleanup, label %for.body

for.body11:                                       ; preds = %if.end18, %for.body11.preheader
  %indvars.iv = phi i64 [ 0, %for.body11.preheader ], [ %indvars.iv.next, %if.end18 ]
  %8 = load i8*, i8** %_buffer, align 8, !tbaa !32
  %9 = load i8*, i8** %_bufferLimit, align 8, !tbaa !36
  %cmp14 = icmp ult i8* %8, %9
  br i1 %cmp14, label %if.end18, label %if.then15

if.then15:                                        ; preds = %for.body11
  %call = tail call zeroext i1 @_ZN9CInBuffer9ReadBlockEv(%class.CInBuffer* nonnull %this)
  br i1 %call, label %if.end18, label %cleanup.split.loop.exit

if.end18:                                         ; preds = %if.then15, %for.body11
  %10 = load i8*, i8** %_buffer, align 8, !tbaa !32
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i64 1
  store i8* %incdec.ptr, i8** %_buffer, align 8, !tbaa !32
  %11 = load i8, i8* %10, align 1, !tbaa !23
  %arrayidx21 = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv
  store i8 %11, i8* %arrayidx21, align 1, !tbaa !23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %cleanup, label %for.body11

cleanup.split.loop.exit:                          ; preds = %if.then15
  %12 = trunc i64 %indvars.iv to i32
  br label %cleanup

cleanup:                                          ; preds = %cleanup.split.loop.exit, %if.end18
  %13 = phi i32 [ %12, %cleanup.split.loop.exit ], [ %size, %if.end18 ]
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i8* @_ZN7CBufferIhEcvPhEv(%class.CBuffer* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_items = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %0 = load i8*, i8** %_items, align 8, !tbaa !42
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9CInBufferD2Ev(%class.CInBuffer* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  invoke void @_ZN9CInBuffer4FreeEv(%class.CInBuffer* %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_stream = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 3
  tail call void @_ZN9CMyComPtrI19ISequentialInStreamED2Ev(%class.CMyComPtr* nonnull %_stream) #17
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  %_stream2 = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 3
  tail call void @_ZN9CMyComPtrI19ISequentialInStreamED2Ev(%class.CMyComPtr* nonnull %_stream2) #17
  tail call void @__clang_call_terminate(i8* %1) #18
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler7OpenSeqEP19ISequentialInStream(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %stream) unnamed_addr #4 align 2 {
entry:
  %call = tail call i32 @_ZN8NArchive4NSwf8CHandler8OpenSeq2EP19ISequentialInStreamP20IArchiveOpenCallback(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %stream, %struct.IArchiveOpenCallback* null)
  ret i32 %call
}

; Function Attrs: uwtable
define dso_local i32 @_ZThn8_N8NArchive4NSwf8CHandler7OpenSeqEP19ISequentialInStream(%"class.NArchive::NSwf::CHandler"* %this, %struct.ISequentialInStream* %stream) unnamed_addr #4 align 2 {
entry:
  %0 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 -1, i32 4
  %1 = bitcast i64* %0 to %"class.NArchive::NSwf::CHandler"*
  %call = tail call i32 @_ZN8NArchive4NSwf8CHandler7OpenSeqEP19ISequentialInStream(%"class.NArchive::NSwf::CHandler"* nonnull %1, %struct.ISequentialInStream* %stream)
  ret i32 %call
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler5CloseEv(%"class.NArchive::NSwf::CHandler"* nocapture readnone %this) unnamed_addr #3 align 2 {
entry:
  ret i32 0
}

; Function Attrs: uwtable
define dso_local i32 @_ZN8NArchive4NSwf8CHandler7ExtractEPKjjiP23IArchiveExtractCallback(%"class.NArchive::NSwf::CHandler"* %this, i32* nocapture readonly %indices, i32 %numItems, i32 %testMode, %struct.IArchiveExtractCallback* %extractCallback) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %progress = alloca %class.CMyComPtr.1, align 8
  %outStream = alloca %class.CMyComPtr.2, align 8
  %cmp = icmp eq i32 %numItems, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3, i32 0, i32 0
  %call = tail call i32 @_ZNK17CBaseRecordVector4SizeEv(%class.CBaseRecordVector* %0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %numItems.addr.0 = phi i32 [ %call, %if.then ], [ %numItems, %entry ]
  %cmp2 = icmp eq i32 %numItems.addr.0, 0
  br i1 %cmp2, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %_tags6 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3
  %wide.trip.count245 = zext i32 %numItems.addr.0 to i64
  br label %for.body

for.body:                                         ; preds = %invoke.cont9, %for.body.lr.ph
  %indvars.iv243 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next244, %invoke.cont9 ]
  %totalSize.0241 = phi i64 [ 0, %for.body.lr.ph ], [ %add, %invoke.cont9 ]
  %1 = trunc i64 %indvars.iv243 to i32
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body
  %arrayidx = getelementptr inbounds i32, i32* %indices, i64 %indvars.iv243
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %for.body
  %cond = phi i32 [ %2, %cond.false ], [ %1, %for.body ]
  %call10 = invoke dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEixEi(%class.CObjectVector* nonnull %_tags6, i32 %cond)
          to label %invoke.cont9 unwind label %lpad8.loopexit

invoke.cont9:                                     ; preds = %cond.end
  %Buf = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call10, i64 0, i32 1
  %call12 = tail call i64 @_ZNK7CBufferIhE11GetCapacityEv(%class.CBuffer* nonnull %Buf)
  %add = add i64 %call12, %totalSize.0241
  %indvars.iv.next244 = add nuw nsw i64 %indvars.iv243, 1
  %exitcond246 = icmp eq i64 %indvars.iv.next244, %wide.trip.count245
  br i1 %exitcond246, label %for.end, label %for.body

lpad8.loopexit:                                   ; preds = %cond.end
  %lpad.loopexit = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %lpad8

lpad8.loopexit.split-lp:                          ; preds = %for.end
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %lpad8

lpad8:                                            ; preds = %lpad8.loopexit.split-lp, %lpad8.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %lpad8.loopexit ], [ %lpad.loopexit.split-lp, %lpad8.loopexit.split-lp ]
  %3 = extractvalue { i8*, i32 } %lpad.phi, 0
  %4 = extractvalue { i8*, i32 } %lpad.phi, 1
  br label %ehcleanup139

for.end:                                          ; preds = %invoke.cont9
  %5 = bitcast %struct.IArchiveExtractCallback* %extractCallback to i32 (%struct.IArchiveExtractCallback*, i64)***
  %vtable = load i32 (%struct.IArchiveExtractCallback*, i64)**, i32 (%struct.IArchiveExtractCallback*, i64)*** %5, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IArchiveExtractCallback*, i64)*, i32 (%struct.IArchiveExtractCallback*, i64)** %vtable, i64 5
  %6 = load i32 (%struct.IArchiveExtractCallback*, i64)*, i32 (%struct.IArchiveExtractCallback*, i64)** %vfn, align 8
  %call14 = invoke i32 %6(%struct.IArchiveExtractCallback* %extractCallback, i64 %add)
          to label %invoke.cont13 unwind label %lpad8.loopexit.split-lp

invoke.cont13:                                    ; preds = %for.end
  %call17 = invoke dereferenceable(72) i8* @_Znwm(i64 72) #21
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont13
  %7 = bitcast i8* %call17 to %class.CLocalProgress*
  invoke void @_ZN14CLocalProgressC1Ev(%class.CLocalProgress* nonnull %7)
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %invoke.cont16
  %8 = bitcast %class.CMyComPtr.1* %progress to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = bitcast i8* %call17 to %struct.ICompressProgressInfo*
  invoke void @_ZN9CMyComPtrI21ICompressProgressInfoEC2EPS0_(%class.CMyComPtr.1* nonnull %progress, %struct.ICompressProgressInfo* nonnull %9)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont19
  %10 = getelementptr %struct.IArchiveExtractCallback, %struct.IArchiveExtractCallback* %extractCallback, i64 0, i32 0
  invoke void @_ZN14CLocalProgress4InitEP9IProgressb(%class.CLocalProgress* nonnull %7, %struct.IProgress* %10, i1 zeroext false)
          to label %for.cond24.preheader unwind label %lpad22

for.cond24.preheader:                             ; preds = %invoke.cont21
  %cmp25234 = icmp eq i32 %numItems.addr.0, 0
  br i1 %cmp25234, label %cleanup132, label %for.body26.lr.ph

for.body26.lr.ph:                                 ; preds = %for.cond24.preheader
  %OutSize = getelementptr inbounds i8, i8* %call17, i64 56
  %11 = bitcast i8* %OutSize to i64*
  %InSize = getelementptr inbounds i8, i8* %call17, i64 48
  %12 = bitcast i8* %InSize to i64*
  %tobool33 = icmp ne i32 %testMode, 0
  %cond34 = zext i1 %tobool33 to i32
  %_tags42 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3
  %13 = bitcast %class.CMyComPtr.2* %outStream to i8*
  %14 = bitcast %struct.IArchiveExtractCallback* %extractCallback to i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)***
  %15 = bitcast %struct.IArchiveExtractCallback* %extractCallback to i32 (%struct.IArchiveExtractCallback*, i32)***
  %wide.trip.count = zext i32 %numItems.addr.0 to i64
  br label %for.body26

for.body26:                                       ; preds = %cleanup118.thread, %for.body26.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body26.lr.ph ], [ %indvars.iv.next, %cleanup118.thread ]
  %totalSize.1236 = phi i64 [ 0, %for.body26.lr.ph ], [ %add49, %cleanup118.thread ]
  store i64 %totalSize.1236, i64* %11, align 8, !tbaa !43
  store i64 %totalSize.1236, i64* %12, align 8, !tbaa !47
  %call29 = invoke i32 @_ZN14CLocalProgress6SetCurEv(%class.CLocalProgress* nonnull %7)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %for.body26
  %cmp30 = icmp eq i32 %call29, 0
  br i1 %cmp30, label %cleanup.cont, label %cleanup132

lpad15:                                           ; preds = %invoke.cont13
  %16 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  br label %ehcleanup139

lpad18:                                           ; preds = %invoke.cont16
  %19 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  tail call void @_ZdlPv(i8* nonnull %call17) #22
  br label %ehcleanup139

lpad20:                                           ; preds = %invoke.cont19
  %22 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  br label %ehcleanup135

lpad22:                                           ; preds = %invoke.cont21
  %25 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  br label %ehcleanup133

lpad27:                                           ; preds = %for.body26
  %28 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  br label %ehcleanup133

cleanup.cont:                                     ; preds = %invoke.cont28
  %31 = trunc i64 %indvars.iv to i32
  br i1 %cmp, label %cond.end40, label %cond.false37

cond.false37:                                     ; preds = %cleanup.cont
  %arrayidx39 = getelementptr inbounds i32, i32* %indices, i64 %indvars.iv
  %32 = load i32, i32* %arrayidx39, align 4, !tbaa !2
  br label %cond.end40

cond.end40:                                       ; preds = %cond.false37, %cleanup.cont
  %cond41 = phi i32 [ %32, %cond.false37 ], [ %31, %cleanup.cont ]
  %call45 = invoke dereferenceable(32) %"struct.NArchive::NSwf::CTag"* @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEixEi(%class.CObjectVector* nonnull %_tags42, i32 %cond41)
          to label %invoke.cont44 unwind label %lpad43

invoke.cont44:                                    ; preds = %cond.end40
  %Buf46 = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %call45, i64 0, i32 1
  %call48 = call i64 @_ZNK7CBufferIhE11GetCapacityEv(%class.CBuffer* nonnull %Buf46)
  %add49 = add i64 %call48, %totalSize.1236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  call void @_ZN9CMyComPtrI20ISequentialOutStreamEC2Ev(%class.CMyComPtr.2* nonnull %outStream)
  %call55 = call %struct.ISequentialOutStream** @_ZN9CMyComPtrI20ISequentialOutStreamEadEv(%class.CMyComPtr.2* nonnull %outStream)
  %vtable56 = load i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)**, i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)*** %14, align 8, !tbaa !38
  %vfn57 = getelementptr inbounds i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)*, i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)** %vtable56, i64 7
  %33 = load i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)*, i32 (%struct.IArchiveExtractCallback*, i32, %struct.ISequentialOutStream**, i32)** %vfn57, align 8
  %call59 = invoke i32 %33(%struct.IArchiveExtractCallback* nonnull %extractCallback, i32 %cond41, %struct.ISequentialOutStream** %call55, i32 %cond34)
          to label %invoke.cont58 unwind label %lpad53

invoke.cont58:                                    ; preds = %invoke.cont44
  %cmp60 = icmp eq i32 %call59, 0
  br i1 %cmp60, label %cleanup.cont65, label %cleanup118

lpad43:                                           ; preds = %cond.end40
  %34 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  br label %ehcleanup133

lpad53:                                           ; preds = %invoke.cont44
  %37 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %ehcleanup

cleanup.cont65:                                   ; preds = %invoke.cont58
  br i1 %tobool33, label %if.end71, label %land.lhs.true

land.lhs.true:                                    ; preds = %cleanup.cont65
  %call69 = call zeroext i1 @_ZNK9CMyComPtrI20ISequentialOutStreamEntEv(%class.CMyComPtr.2* nonnull %outStream)
  br i1 %call69, label %cleanup118.thread, label %if.end71

lpad67:                                           ; preds = %if.end104
  %38 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %ehcleanup

if.end71:                                         ; preds = %land.lhs.true, %cleanup.cont65
  %vtable73 = load i32 (%struct.IArchiveExtractCallback*, i32)**, i32 (%struct.IArchiveExtractCallback*, i32)*** %15, align 8, !tbaa !38
  %vfn74 = getelementptr inbounds i32 (%struct.IArchiveExtractCallback*, i32)*, i32 (%struct.IArchiveExtractCallback*, i32)** %vtable73, i64 8
  %39 = load i32 (%struct.IArchiveExtractCallback*, i32)*, i32 (%struct.IArchiveExtractCallback*, i32)** %vfn74, align 8
  %call77 = invoke i32 %39(%struct.IArchiveExtractCallback* nonnull %extractCallback, i32 %cond34)
          to label %invoke.cont76 unwind label %lpad75

invoke.cont76:                                    ; preds = %if.end71
  %cmp78 = icmp eq i32 %call77, 0
  br i1 %cmp78, label %cleanup.cont83, label %cleanup118

lpad75:                                           ; preds = %if.end71
  %40 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %ehcleanup

cleanup.cont83:                                   ; preds = %invoke.cont76
  %call85 = call %struct.ISequentialOutStream* @_ZNK9CMyComPtrI20ISequentialOutStreamEcvPS0_Ev(%class.CMyComPtr.2* nonnull %outStream)
  %tobool86 = icmp eq %struct.ISequentialOutStream* %call85, null
  br i1 %tobool86, label %if.end104, label %if.then87

if.then87:                                        ; preds = %cleanup.cont83
  %call91 = call %struct.ISequentialOutStream* @_ZNK9CMyComPtrI20ISequentialOutStreamEcvPS0_Ev(%class.CMyComPtr.2* nonnull %outStream)
  %call93 = call i8* @_ZNK7CBufferIhEcvPKhEv(%class.CBuffer* nonnull %Buf46)
  %call95 = call i64 @_ZNK7CBufferIhE11GetCapacityEv(%class.CBuffer* nonnull %Buf46)
  %call97 = invoke i32 @_Z11WriteStreamP20ISequentialOutStreamPKvm(%struct.ISequentialOutStream* %call91, i8* %call93, i64 %call95)
          to label %invoke.cont96 unwind label %lpad89

invoke.cont96:                                    ; preds = %if.then87
  %cmp98 = icmp eq i32 %call97, 0
  br i1 %cmp98, label %if.end104, label %cleanup118

lpad89:                                           ; preds = %if.then87
  %41 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %ehcleanup

if.end104:                                        ; preds = %invoke.cont96, %cleanup.cont83
  invoke void @_ZN9CMyComPtrI20ISequentialOutStreamE7ReleaseEv(%class.CMyComPtr.2* nonnull %outStream)
          to label %invoke.cont105 unwind label %lpad67

invoke.cont105:                                   ; preds = %if.end104
  %vtable107 = load i32 (%struct.IArchiveExtractCallback*, i32)**, i32 (%struct.IArchiveExtractCallback*, i32)*** %15, align 8, !tbaa !38
  %vfn108 = getelementptr inbounds i32 (%struct.IArchiveExtractCallback*, i32)*, i32 (%struct.IArchiveExtractCallback*, i32)** %vtable107, i64 9
  %42 = load i32 (%struct.IArchiveExtractCallback*, i32)*, i32 (%struct.IArchiveExtractCallback*, i32)** %vfn108, align 8
  %call111 = invoke i32 %42(%struct.IArchiveExtractCallback* nonnull %extractCallback, i32 0)
          to label %invoke.cont110 unwind label %lpad109

invoke.cont110:                                   ; preds = %invoke.cont105
  %cmp112 = icmp eq i32 %call111, 0
  br i1 %cmp112, label %cleanup118.thread, label %cleanup118

lpad109:                                          ; preds = %invoke.cont105
  %43 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTIPKc to i8*)
          catch i8* null
  br label %ehcleanup

cleanup118.thread:                                ; preds = %invoke.cont110, %land.lhs.true
  call void @_ZN9CMyComPtrI20ISequentialOutStreamED2Ev(%class.CMyComPtr.2* nonnull %outStream) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %cleanup132, label %for.body26

cleanup118:                                       ; preds = %invoke.cont110, %invoke.cont96, %invoke.cont76, %invoke.cont58
  %retval.7 = phi i32 [ %call97, %invoke.cont96 ], [ %call77, %invoke.cont76 ], [ %call59, %invoke.cont58 ], [ %call111, %invoke.cont110 ]
  %44 = bitcast %class.CMyComPtr.2* %outStream to i8*
  call void @_ZN9CMyComPtrI20ISequentialOutStreamED2Ev(%class.CMyComPtr.2* nonnull %outStream) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  br label %cleanup132

ehcleanup:                                        ; preds = %lpad109, %lpad89, %lpad75, %lpad67, %lpad53
  %.sink247 = phi { i8*, i32 } [ %43, %lpad109 ], [ %41, %lpad89 ], [ %40, %lpad75 ], [ %38, %lpad67 ], [ %37, %lpad53 ]
  %45 = extractvalue { i8*, i32 } %.sink247, 0
  %46 = extractvalue { i8*, i32 } %.sink247, 1
  %47 = bitcast %class.CMyComPtr.2* %outStream to i8*
  call void @_ZN9CMyComPtrI20ISequentialOutStreamED2Ev(%class.CMyComPtr.2* nonnull %outStream) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  br label %ehcleanup133

cleanup132:                                       ; preds = %cleanup118, %cleanup118.thread, %invoke.cont28, %for.cond24.preheader
  %retval.8 = phi i32 [ %retval.7, %cleanup118 ], [ 0, %for.cond24.preheader ], [ %call29, %invoke.cont28 ], [ 0, %cleanup118.thread ]
  call void @_ZN9CMyComPtrI21ICompressProgressInfoED2Ev(%class.CMyComPtr.1* nonnull %progress) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  br label %return

ehcleanup133:                                     ; preds = %ehcleanup, %lpad43, %lpad27, %lpad22
  %ehselector.slot.2 = phi i32 [ %30, %lpad27 ], [ %27, %lpad22 ], [ %46, %ehcleanup ], [ %36, %lpad43 ]
  %exn.slot.2 = phi i8* [ %29, %lpad27 ], [ %26, %lpad22 ], [ %45, %ehcleanup ], [ %35, %lpad43 ]
  call void @_ZN9CMyComPtrI21ICompressProgressInfoED2Ev(%class.CMyComPtr.1* nonnull %progress) #17
  br label %ehcleanup135

ehcleanup135:                                     ; preds = %ehcleanup133, %lpad20
  %ehselector.slot.3 = phi i32 [ %ehselector.slot.2, %ehcleanup133 ], [ %24, %lpad20 ]
  %exn.slot.3 = phi i8* [ %exn.slot.2, %ehcleanup133 ], [ %23, %lpad20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  br label %ehcleanup139

ehcleanup139:                                     ; preds = %ehcleanup135, %lpad18, %lpad15, %lpad8
  %ehselector.slot.5 = phi i32 [ %4, %lpad8 ], [ %ehselector.slot.3, %ehcleanup135 ], [ %21, %lpad18 ], [ %18, %lpad15 ]
  %exn.slot.5 = phi i8* [ %3, %lpad8 ], [ %exn.slot.3, %ehcleanup135 ], [ %20, %lpad18 ], [ %17, %lpad15 ]
  %48 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTIPKc to i8*)) #17
  %matches = icmp eq i32 %ehselector.slot.5, %48
  %49 = call i8* @__cxa_begin_catch(i8* %exn.slot.5) #17
  br i1 %matches, label %catch145, label %catch

catch145:                                         ; preds = %ehcleanup139
  %exception = call i8* @__cxa_allocate_exception(i64 8) #17
  %50 = bitcast i8* %exception to i8**
  store i8* %49, i8** %50, align 16, !tbaa !12
  invoke void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTIPKc to i8*), i8* null) #20
          to label %unreachable unwind label %lpad147

catch:                                            ; preds = %ehcleanup139
  call void @__cxa_end_catch()
  br label %return

lpad147:                                          ; preds = %catch145
  %51 = landingpad { i8*, i32 }
          cleanup
  call void @__cxa_end_catch() #17
  resume { i8*, i32 } %51

return:                                           ; preds = %catch, %cleanup132, %if.end
  %retval.10 = phi i32 [ -2147024882, %catch ], [ %retval.8, %cleanup132 ], [ 0, %if.end ]
  ret i32 %retval.10

unreachable:                                      ; preds = %catch145
  unreachable
}

; Function Attrs: nobuiltin nofree
declare dso_local noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare dso_local void @_ZN14CLocalProgressC1Ev(%class.CLocalProgress*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9CMyComPtrI21ICompressProgressInfoEC2EPS0_(%class.CMyComPtr.1* %this, %struct.ICompressProgressInfo* %p) unnamed_addr #4 comdat align 2 {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.1, %class.CMyComPtr.1* %this, i64 0, i32 0
  store %struct.ICompressProgressInfo* %p, %struct.ICompressProgressInfo** %_p, align 8, !tbaa !48
  %cmp = icmp eq %struct.ICompressProgressInfo* %p, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = getelementptr %struct.ICompressProgressInfo, %struct.ICompressProgressInfo* %p, i64 0, i32 0
  %1 = bitcast %struct.ICompressProgressInfo* %p to i32 (%struct.IUnknown*)***
  %vtable = load i32 (%struct.IUnknown*)**, i32 (%struct.IUnknown*)*** %1, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vtable, i64 1
  %2 = load i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vfn, align 8
  %call = tail call i32 %2(%struct.IUnknown* %0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare dso_local void @_ZN14CLocalProgress4InitEP9IProgressb(%class.CLocalProgress*, %struct.IProgress*, i1 zeroext) local_unnamed_addr #6

declare dso_local i32 @_ZN14CLocalProgress6SetCurEv(%class.CLocalProgress*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9CMyComPtrI20ISequentialOutStreamEC2Ev(%class.CMyComPtr.2* %this) unnamed_addr #5 comdat align 2 {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.2, %class.CMyComPtr.2* %this, i64 0, i32 0
  store %struct.ISequentialOutStream* null, %struct.ISequentialOutStream** %_p, align 8, !tbaa !49
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local %struct.ISequentialOutStream** @_ZN9CMyComPtrI20ISequentialOutStreamEadEv(%class.CMyComPtr.2* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.2, %class.CMyComPtr.2* %this, i64 0, i32 0
  ret %struct.ISequentialOutStream** %_p
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK9CMyComPtrI20ISequentialOutStreamEntEv(%class.CMyComPtr.2* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.2, %class.CMyComPtr.2* %this, i64 0, i32 0
  %0 = load %struct.ISequentialOutStream*, %struct.ISequentialOutStream** %_p, align 8, !tbaa !49
  %cmp = icmp eq %struct.ISequentialOutStream* %0, null
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local %struct.ISequentialOutStream* @_ZNK9CMyComPtrI20ISequentialOutStreamEcvPS0_Ev(%class.CMyComPtr.2* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.2, %class.CMyComPtr.2* %this, i64 0, i32 0
  %0 = load %struct.ISequentialOutStream*, %struct.ISequentialOutStream** %_p, align 8, !tbaa !49
  ret %struct.ISequentialOutStream* %0
}

declare dso_local i32 @_Z11WriteStreamP20ISequentialOutStreamPKvm(%struct.ISequentialOutStream*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i8* @_ZNK7CBufferIhEcvPKhEv(%class.CBuffer* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_items = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %0 = load i8*, i8** %_items, align 8, !tbaa !42
  ret i8* %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9CMyComPtrI20ISequentialOutStreamE7ReleaseEv(%class.CMyComPtr.2* %this) local_unnamed_addr #4 comdat align 2 {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.2, %class.CMyComPtr.2* %this, i64 0, i32 0
  %0 = load %struct.ISequentialOutStream*, %struct.ISequentialOutStream** %_p, align 8, !tbaa !49
  %tobool = icmp eq %struct.ISequentialOutStream* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr %struct.ISequentialOutStream, %struct.ISequentialOutStream* %0, i64 0, i32 0
  %2 = bitcast %struct.ISequentialOutStream* %0 to i32 (%struct.IUnknown*)***
  %vtable = load i32 (%struct.IUnknown*)**, i32 (%struct.IUnknown*)*** %2, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vtable, i64 2
  %3 = load i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vfn, align 8
  %call = tail call i32 %3(%struct.IUnknown* %1)
  store %struct.ISequentialOutStream* null, %struct.ISequentialOutStream** %_p, align 8, !tbaa !49
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9CMyComPtrI20ISequentialOutStreamED2Ev(%class.CMyComPtr.2* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.2, %class.CMyComPtr.2* %this, i64 0, i32 0
  %0 = load %struct.ISequentialOutStream*, %struct.ISequentialOutStream** %_p, align 8, !tbaa !49
  %tobool = icmp eq %struct.ISequentialOutStream* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr %struct.ISequentialOutStream, %struct.ISequentialOutStream* %0, i64 0, i32 0
  %2 = bitcast %struct.ISequentialOutStream* %0 to i32 (%struct.IUnknown*)***
  %vtable = load i32 (%struct.IUnknown*)**, i32 (%struct.IUnknown*)*** %2, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vtable, i64 2
  %3 = load i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vfn, align 8
  %call = invoke i32 %3(%struct.IUnknown* %1)
          to label %if.end unwind label %terminate.lpad

if.end:                                           ; preds = %if.then, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  tail call void @__clang_call_terminate(i8* %5) #18
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9CMyComPtrI21ICompressProgressInfoED2Ev(%class.CMyComPtr.1* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr.1, %class.CMyComPtr.1* %this, i64 0, i32 0
  %0 = load %struct.ICompressProgressInfo*, %struct.ICompressProgressInfo** %_p, align 8, !tbaa !48
  %tobool = icmp eq %struct.ICompressProgressInfo* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr %struct.ICompressProgressInfo, %struct.ICompressProgressInfo* %0, i64 0, i32 0
  %2 = bitcast %struct.ICompressProgressInfo* %0 to i32 (%struct.IUnknown*)***
  %vtable = load i32 (%struct.IUnknown*)**, i32 (%struct.IUnknown*)*** %2, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vtable, i64 2
  %3 = load i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vfn, align 8
  %call = invoke i32 %3(%struct.IUnknown* %1)
          to label %if.end unwind label %terminate.lpad

if.end:                                           ; preds = %if.then, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  tail call void @__clang_call_terminate(i8* %5) #18
  unreachable
}

; Function Attrs: nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #12

declare dso_local i8* @__cxa_allocate_exception(i64) local_unnamed_addr

declare dso_local void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

; Function Attrs: uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #4 section ".text.startup" {
entry:
  tail call void @_ZN8NArchive4NSwf12CRegisterSwfC2Ev(%"struct.NArchive::NSwf::CRegisterSwf"* nonnull @_ZN8NArchive4NSwfL13g_RegisterArcE)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf12CRegisterSwfC2Ev(%"struct.NArchive::NSwf::CRegisterSwf"* %this) unnamed_addr #4 comdat align 2 {
entry:
  tail call void @_Z11RegisterArcPK8CArcInfo(%struct.CArcInfo* bitcast ({ i32*, i32*, i32*, i8, <{ i8, i8, i8, [25 x i8] }>, i32, i8, %struct.IInArchive* ()*, %struct.IOutArchive* ()* }* @_ZN8NArchive4NSwfL9g_ArcInfoE to %struct.CArcInfo*))
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZN8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv(%"class.NArchive::NSwf::CHandler"* %this, %struct.GUID* dereferenceable(16) %iid, i8** %outObject) unnamed_addr #4 comdat align 2 {
entry:
  %call = tail call i32 @_ZeqRK4GUIDS1_(%struct.GUID* nonnull dereferenceable(16) %iid, %struct.GUID* nonnull dereferenceable(16) @IID_IUnknown)
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = bitcast i8** %outObject to %"class.NArchive::NSwf::CHandler"**
  store %"class.NArchive::NSwf::CHandler"* %this, %"class.NArchive::NSwf::CHandler"** %0, align 8, !tbaa !12
  %1 = bitcast %"class.NArchive::NSwf::CHandler"* %this to i32 (%"class.NArchive::NSwf::CHandler"*)***
  %vtable = load i32 (%"class.NArchive::NSwf::CHandler"*)**, i32 (%"class.NArchive::NSwf::CHandler"*)*** %1, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%"class.NArchive::NSwf::CHandler"*)*, i32 (%"class.NArchive::NSwf::CHandler"*)** %vtable, i64 1
  %2 = load i32 (%"class.NArchive::NSwf::CHandler"*)*, i32 (%"class.NArchive::NSwf::CHandler"*)** %vfn, align 8
  %call2 = tail call i32 %2(%"class.NArchive::NSwf::CHandler"* %this)
  br label %return

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @_ZeqRK4GUIDS1_(%struct.GUID* nonnull dereferenceable(16) %iid, %struct.GUID* nonnull dereferenceable(16) @IID_IInArchive)
  %tobool4 = icmp eq i32 %call3, 0
  br i1 %tobool4, label %if.end9, label %if.then5

if.then5:                                         ; preds = %if.end
  %3 = bitcast i8** %outObject to %"class.NArchive::NSwf::CHandler"**
  store %"class.NArchive::NSwf::CHandler"* %this, %"class.NArchive::NSwf::CHandler"** %3, align 8, !tbaa !12
  %4 = bitcast %"class.NArchive::NSwf::CHandler"* %this to i32 (%"class.NArchive::NSwf::CHandler"*)***
  %vtable6 = load i32 (%"class.NArchive::NSwf::CHandler"*)**, i32 (%"class.NArchive::NSwf::CHandler"*)*** %4, align 8, !tbaa !38
  %vfn7 = getelementptr inbounds i32 (%"class.NArchive::NSwf::CHandler"*)*, i32 (%"class.NArchive::NSwf::CHandler"*)** %vtable6, i64 1
  %5 = load i32 (%"class.NArchive::NSwf::CHandler"*)*, i32 (%"class.NArchive::NSwf::CHandler"*)** %vfn7, align 8
  %call8 = tail call i32 %5(%"class.NArchive::NSwf::CHandler"* %this)
  br label %return

if.end9:                                          ; preds = %if.end
  %call10 = tail call i32 @_ZeqRK4GUIDS1_(%struct.GUID* nonnull dereferenceable(16) %iid, %struct.GUID* nonnull dereferenceable(16) @IID_IArchiveOpenSeq)
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %return, label %if.then12

if.then12:                                        ; preds = %if.end9
  %add.ptr = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 1
  %6 = bitcast i8** %outObject to %struct.IArchiveOpenSeq**
  store %struct.IArchiveOpenSeq* %add.ptr, %struct.IArchiveOpenSeq** %6, align 8, !tbaa !12
  %7 = bitcast %"class.NArchive::NSwf::CHandler"* %this to i32 (%"class.NArchive::NSwf::CHandler"*)***
  %vtable13 = load i32 (%"class.NArchive::NSwf::CHandler"*)**, i32 (%"class.NArchive::NSwf::CHandler"*)*** %7, align 8, !tbaa !38
  %vfn14 = getelementptr inbounds i32 (%"class.NArchive::NSwf::CHandler"*)*, i32 (%"class.NArchive::NSwf::CHandler"*)** %vtable13, i64 1
  %8 = load i32 (%"class.NArchive::NSwf::CHandler"*)*, i32 (%"class.NArchive::NSwf::CHandler"*)** %vfn14, align 8
  %call15 = tail call i32 %8(%"class.NArchive::NSwf::CHandler"* %this)
  br label %return

return:                                           ; preds = %if.then12, %if.end9, %if.then5, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then5 ], [ 0, %if.then12 ], [ -2147467262, %if.end9 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i32 @_ZN8NArchive4NSwf8CHandler6AddRefEv(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %__m_RefCount = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 2, i32 0
  %0 = load i32, i32* %__m_RefCount, align 8, !tbaa !51
  %inc = add i32 %0, 1
  store i32 %inc, i32* %__m_RefCount, align 8, !tbaa !51
  ret i32 %inc
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i32 @_ZN8NArchive4NSwf8CHandler7ReleaseEv(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %__m_RefCount = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 2, i32 0
  %0 = load i32, i32* %__m_RefCount, align 8, !tbaa !51
  %dec = add i32 %0, -1
  store i32 %dec, i32* %__m_RefCount, align 8, !tbaa !51
  %cmp = icmp eq i32 %dec, 0
  br i1 %cmp, label %delete.notnull, label %return

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"class.NArchive::NSwf::CHandler"* %this to void (%"class.NArchive::NSwf::CHandler"*)***
  %vtable = load void (%"class.NArchive::NSwf::CHandler"*)**, void (%"class.NArchive::NSwf::CHandler"*)*** %1, align 8, !tbaa !38
  %vfn = getelementptr inbounds void (%"class.NArchive::NSwf::CHandler"*)*, void (%"class.NArchive::NSwf::CHandler"*)** %vtable, i64 4
  %2 = load void (%"class.NArchive::NSwf::CHandler"*)*, void (%"class.NArchive::NSwf::CHandler"*)** %vfn, align 8
  tail call void %2(%"class.NArchive::NSwf::CHandler"* nonnull %this) #17
  br label %return

return:                                           ; preds = %delete.notnull, %entry
  ret i32 %dec
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf8CHandlerD2Ev(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTVN8NArchive4NSwf8CHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  %add.ptr = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 1
  %1 = getelementptr %struct.IArchiveOpenSeq, %struct.IArchiveOpenSeq* %add.ptr, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTVN8NArchive4NSwf8CHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !38
  %_tags = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3
  tail call void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED2Ev(%class.CObjectVector* nonnull %_tags) #17
  %2 = getelementptr %struct.IArchiveOpenSeq, %struct.IArchiveOpenSeq* %add.ptr, i64 0, i32 0
  tail call void @_ZN8IUnknownD2Ev(%struct.IUnknown* nonnull %2) #17
  %3 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 0, i32 0
  tail call void @_ZN8IUnknownD2Ev(%struct.IUnknown* %3) #17
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf8CHandlerD0Ev(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #9 comdat align 2 {
entry:
  tail call void @_ZN8NArchive4NSwf8CHandlerD2Ev(%"class.NArchive::NSwf::CHandler"* %this) #17
  %0 = bitcast %"class.NArchive::NSwf::CHandler"* %this to i8*
  tail call void @_ZdlPv(i8* %0) #22
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZThn8_N8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv(%"class.NArchive::NSwf::CHandler"* %this, %struct.GUID* dereferenceable(16) %iid, i8** %outObject) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 -1, i32 4
  %1 = bitcast i64* %0 to %"class.NArchive::NSwf::CHandler"*
  %call = tail call i32 @_ZN8NArchive4NSwf8CHandler14QueryInterfaceERK4GUIDPPv(%"class.NArchive::NSwf::CHandler"* nonnull %1, %struct.GUID* nonnull dereferenceable(16) %iid, i8** %outObject)
  ret i32 %call
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZThn8_N8NArchive4NSwf8CHandler6AddRefEv(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 -1, i32 4
  %1 = bitcast i64* %0 to %"class.NArchive::NSwf::CHandler"*
  %call = tail call i32 @_ZN8NArchive4NSwf8CHandler6AddRefEv(%"class.NArchive::NSwf::CHandler"* nonnull %1)
  ret i32 %call
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZThn8_N8NArchive4NSwf8CHandler7ReleaseEv(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 -1, i32 4
  %1 = bitcast i64* %0 to %"class.NArchive::NSwf::CHandler"*
  %call = tail call i32 @_ZN8NArchive4NSwf8CHandler7ReleaseEv(%"class.NArchive::NSwf::CHandler"* nonnull %1)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N8NArchive4NSwf8CHandlerD1Ev(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 -1, i32 4
  %1 = bitcast i64* %0 to %"class.NArchive::NSwf::CHandler"*
  tail call void @_ZN8NArchive4NSwf8CHandlerD2Ev(%"class.NArchive::NSwf::CHandler"* nonnull %1) #17
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZThn8_N8NArchive4NSwf8CHandlerD0Ev(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 -1, i32 4
  %1 = bitcast i64* %0 to %"class.NArchive::NSwf::CHandler"*
  tail call void @_ZN8NArchive4NSwf8CHandlerD0Ev(%"class.NArchive::NSwf::CHandler"* nonnull %1) #17
  ret void
}

declare dso_local i32 @_ZN8NWindows4NCOM12CPropVariant5ClearEv(%"class.NWindows::NCOM::CPropVariant"*) local_unnamed_addr #6

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #13 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #17
  tail call void @_ZSt9terminatev() #18
  unreachable
}

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

declare dso_local zeroext i8 @_ZN9CInBuffer10ReadBlock2Ev(%class.CInBuffer*) local_unnamed_addr #6

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9CInBuffer8ReadByteERh(%class.CInBuffer* %this, i8* dereferenceable(1) %b) local_unnamed_addr #4 comdat align 2 {
entry:
  %_buffer = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 0
  %0 = load i8*, i8** %_buffer, align 8, !tbaa !32
  %_bufferLimit = getelementptr inbounds %class.CInBuffer, %class.CInBuffer* %this, i64 0, i32 1
  %1 = load i8*, i8** %_bufferLimit, align 8, !tbaa !36
  %cmp = icmp ult i8* %0, %1
  br i1 %cmp, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call zeroext i1 @_ZN9CInBuffer9ReadBlockEv(%class.CInBuffer* nonnull %this)
  br i1 %call, label %if.end3, label %return

if.end3:                                          ; preds = %if.then, %entry
  %2 = load i8*, i8** %_buffer, align 8, !tbaa !32
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i64 1
  store i8* %incdec.ptr, i8** %_buffer, align 8, !tbaa !32
  %3 = load i8, i8* %2, align 1, !tbaa !23
  store i8 %3, i8* %b, align 1, !tbaa !23
  br label %return

return:                                           ; preds = %if.end3, %if.then
  %retval.0 = phi i1 [ true, %if.end3 ], [ false, %if.then ]
  ret i1 %retval.0
}

declare dso_local zeroext i1 @_ZN9CInBuffer9ReadBlockEv(%class.CInBuffer*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN7CBufferIhEC2Ev(%class.CBuffer* %this) unnamed_addr #5 comdat align 2 {
entry:
  %0 = getelementptr %class.CBuffer, %class.CBuffer* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV7CBufferIhE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  %_capacity = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 1
  %1 = bitcast i64* %_capacity to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %1, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN7CBufferIhED2Ev(%class.CBuffer* %this) unnamed_addr #5 comdat align 2 {
entry:
  %0 = getelementptr %class.CBuffer, %class.CBuffer* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV7CBufferIhE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  %_items = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %1 = load i8*, i8** %_items, align 8, !tbaa !42
  %isnull = icmp eq i8* %1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdaPv(i8* nonnull %1) #22
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN7CBufferIhED0Ev(%class.CBuffer* %this) unnamed_addr #5 comdat align 2 {
entry:
  tail call void @_ZN7CBufferIhED2Ev(%class.CBuffer* %this) #17
  %0 = bitcast %class.CBuffer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #22
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) local_unnamed_addr #11

declare dso_local void @_ZN9CInBuffer4FreeEv(%class.CInBuffer*) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9CMyComPtrI19ISequentialInStreamED2Ev(%class.CMyComPtr* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %_p = getelementptr inbounds %class.CMyComPtr, %class.CMyComPtr* %this, i64 0, i32 0
  %0 = load %struct.ISequentialInStream*, %struct.ISequentialInStream** %_p, align 8, !tbaa !53
  %tobool = icmp eq %struct.ISequentialInStream* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr %struct.ISequentialInStream, %struct.ISequentialInStream* %0, i64 0, i32 0
  %2 = bitcast %struct.ISequentialInStream* %0 to i32 (%struct.IUnknown*)***
  %vtable = load i32 (%struct.IUnknown*)**, i32 (%struct.IUnknown*)*** %2, align 8, !tbaa !38
  %vfn = getelementptr inbounds i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vtable, i64 2
  %3 = load i32 (%struct.IUnknown*)*, i32 (%struct.IUnknown*)** %vfn, align 8
  %call = invoke i32 %3(%struct.IUnknown* %1)
          to label %if.end unwind label %terminate.lpad

if.end:                                           ; preds = %if.then, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  tail call void @__clang_call_terminate(i8* %5) #18
  unreachable
}

declare dso_local void @_Z11RegisterArcPK8CArcInfo(%struct.CArcInfo*) local_unnamed_addr #6

; Function Attrs: uwtable
define internal nonnull %struct.IInArchive* @_ZN8NArchive4NSwfL9CreateArcEv() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call = tail call dereferenceable(64) i8* @_Znwm(i64 64) #21
  %0 = bitcast i8* %call to %"class.NArchive::NSwf::CHandler"*
  invoke void @_ZN8NArchive4NSwf8CHandlerC2Ev(%"class.NArchive::NSwf::CHandler"* nonnull %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast i8* %call to %struct.IInArchive*
  ret %struct.IInArchive* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %call) #22
  resume { i8*, i32 } %2
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf8CHandlerC2Ev(%"class.NArchive::NSwf::CHandler"* %this) unnamed_addr #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 0
  tail call void @_ZN10IInArchiveC2Ev(%struct.IInArchive* %0) #17
  %1 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 1
  tail call void @_ZN15IArchiveOpenSeqC2Ev(%struct.IArchiveOpenSeq* nonnull %1) #17
  %2 = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 2
  tail call void @_ZN13CMyUnknownImpC2Ev(%class.CMyUnknownImp* nonnull %2)
  %3 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTVN8NArchive4NSwf8CHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !38
  %4 = getelementptr %struct.IArchiveOpenSeq, %struct.IArchiveOpenSeq* %1, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [8 x i8*] }, { [18 x i8*], [8 x i8*] }* @_ZTVN8NArchive4NSwf8CHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !38
  %_tags = getelementptr inbounds %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 3
  invoke void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEC2Ev(%class.CObjectVector* nonnull %_tags)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = getelementptr %struct.IArchiveOpenSeq, %struct.IArchiveOpenSeq* %1, i64 0, i32 0
  tail call void @_ZN8IUnknownD2Ev(%struct.IUnknown* nonnull %6) #17
  %7 = getelementptr %"class.NArchive::NSwf::CHandler", %"class.NArchive::NSwf::CHandler"* %this, i64 0, i32 0, i32 0
  tail call void @_ZN8IUnknownD2Ev(%struct.IUnknown* %7) #17
  resume { i8*, i32 } %5
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN10IInArchiveC2Ev(%struct.IInArchive* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr %struct.IInArchive, %struct.IInArchive* %this, i64 0, i32 0
  tail call void @_ZN8IUnknownC2Ev(%struct.IUnknown* %0) #17
  %1 = getelementptr %struct.IInArchive, %struct.IInArchive* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV10IInArchive, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !38
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN15IArchiveOpenSeqC2Ev(%struct.IArchiveOpenSeq* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr %struct.IArchiveOpenSeq, %struct.IArchiveOpenSeq* %this, i64 0, i32 0
  tail call void @_ZN8IUnknownC2Ev(%struct.IUnknown* %0) #17
  %1 = getelementptr %struct.IArchiveOpenSeq, %struct.IArchiveOpenSeq* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV15IArchiveOpenSeq, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !38
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN13CMyUnknownImpC2Ev(%class.CMyUnknownImp* %this) unnamed_addr #5 comdat align 2 {
entry:
  %__m_RefCount = getelementptr inbounds %class.CMyUnknownImp, %class.CMyUnknownImp* %this, i64 0, i32 0
  store i32 0, i32* %__m_RefCount, align 4, !tbaa !51
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEEC2Ev(%class.CObjectVector* %this) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0
  tail call void @_ZN13CRecordVectorIPvEC2Ev(%class.CRecordVector* %0)
  %1 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CObjectVectorIN8NArchive4NSwf4CTagEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !38
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8IUnknownC2Ev(%struct.IUnknown* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr %struct.IUnknown, %struct.IUnknown* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8IUnknown, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  ret void
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN8IUnknownD2Ev(%struct.IUnknown* %this) unnamed_addr #5 comdat align 2 {
entry:
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN10IInArchiveD0Ev(%struct.IInArchive* %this) unnamed_addr #9 comdat align 2 {
entry:
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN8IUnknownD0Ev(%struct.IUnknown* %this) unnamed_addr #5 comdat align 2 {
entry:
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN15IArchiveOpenSeqD0Ev(%struct.IArchiveOpenSeq* %this) unnamed_addr #9 comdat align 2 {
entry:
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN13CRecordVectorIPvEC2Ev(%class.CRecordVector* %this) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0
  tail call void @_ZN17CBaseRecordVectorC2Em(%class.CBaseRecordVector* %0, i64 8)
  %1 = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CRecordVectorIPvE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !38
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED2Ev(%class.CObjectVector* %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CObjectVectorIN8NArchive4NSwf4CTagEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  %1 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0, i32 0
  invoke void @_ZN17CBaseRecordVector5ClearEv(%class.CBaseRecordVector* %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_ZN17CBaseRecordVectorD2Ev(%class.CBaseRecordVector* %1) #17
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  tail call void @_ZN17CBaseRecordVectorD2Ev(%class.CBaseRecordVector* %1) #17
  tail call void @__clang_call_terminate(i8* %3) #18
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED0Ev(%class.CObjectVector* %this) unnamed_addr #5 comdat align 2 {
entry:
  tail call void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEED2Ev(%class.CObjectVector* %this) #17
  %0 = bitcast %class.CObjectVector* %this to i8*
  tail call void @_ZdlPv(i8* %0) #22
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN13CObjectVectorIN8NArchive4NSwf4CTagEE6DeleteEii(%class.CObjectVector* %this, i32 %index, i32 %num) unnamed_addr #4 comdat align 2 {
entry:
  %num.addr = alloca i32, align 4
  store i32 %num, i32* %num.addr, align 4, !tbaa !2
  %0 = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0, i32 0
  call void @_ZNK17CBaseRecordVector22TestIndexAndCorrectNumEiRi(%class.CBaseRecordVector* %0, i32 %index, i32* nonnull dereferenceable(4) %num.addr)
  %1 = load i32, i32* %num.addr, align 4, !tbaa !2
  %cmp8 = icmp sgt i32 %1, 0
  br i1 %cmp8, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_items = getelementptr %class.CObjectVector, %class.CObjectVector* %this, i64 0, i32 0, i32 0, i32 3
  %2 = bitcast i8** %_items to i8***
  %3 = sext i32 %index to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  %.lcssa = phi i32 [ %1, %entry ], [ %8, %for.inc ]
  call void @_ZN17CBaseRecordVector6DeleteEii(%class.CBaseRecordVector* %0, i32 %index, i32 %.lcssa)
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %4 = load i8**, i8*** %2, align 8, !tbaa !54
  %5 = add nsw i64 %indvars.iv, %3
  %arrayidx = getelementptr inbounds i8*, i8** %4, i64 %5
  %6 = load i8*, i8** %arrayidx, align 8, !tbaa !12
  %isnull = icmp eq i8* %6, null
  br i1 %isnull, label %for.inc, label %delete.notnull

delete.notnull:                                   ; preds = %for.body
  %7 = bitcast i8* %6 to %"struct.NArchive::NSwf::CTag"*
  call void @_ZN8NArchive4NSwf4CTagD2Ev(%"struct.NArchive::NSwf::CTag"* nonnull %7) #17
  call void @_ZdlPv(i8* nonnull %6) #22
  br label %for.inc

for.inc:                                          ; preds = %delete.notnull, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = load i32, i32* %num.addr, align 4, !tbaa !2
  %9 = sext i32 %8 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN17CBaseRecordVectorC2Em(%class.CBaseRecordVector* %this, i64 %itemSize) unnamed_addr #5 comdat align 2 {
entry:
  %0 = getelementptr %class.CBaseRecordVector, %class.CBaseRecordVector* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV17CBaseRecordVector, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  %_capacity = getelementptr inbounds %class.CBaseRecordVector, %class.CBaseRecordVector* %this, i64 0, i32 1
  %_itemSize = getelementptr inbounds %class.CBaseRecordVector, %class.CBaseRecordVector* %this, i64 0, i32 4
  %1 = bitcast i32* %_capacity to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %1, i8 0, i64 16, i1 false)
  store i64 %itemSize, i64* %_itemSize, align 8, !tbaa !55
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZN17CBaseRecordVectorD2Ev(%class.CBaseRecordVector*) unnamed_addr #15

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN13CRecordVectorIPvED0Ev(%class.CRecordVector* %this) unnamed_addr #9 comdat align 2 {
entry:
  %0 = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0
  tail call void @_ZN17CBaseRecordVectorD2Ev(%class.CBaseRecordVector* %0) #17
  %1 = bitcast %class.CRecordVector* %this to i8*
  tail call void @_ZdlPv(i8* %1) #22
  ret void
}

declare dso_local void @_ZN17CBaseRecordVector6DeleteEii(%class.CBaseRecordVector*, i32, i32) unnamed_addr #6

; Function Attrs: nounwind
declare dso_local void @_ZN17CBaseRecordVectorD1Ev(%class.CBaseRecordVector*) unnamed_addr #15

; Function Attrs: nounwind
declare dso_local void @_ZN17CBaseRecordVectorD0Ev(%class.CBaseRecordVector*) unnamed_addr #15

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK17CBaseRecordVector22TestIndexAndCorrectNumEiRi(%class.CBaseRecordVector* %this, i32 %index, i32* dereferenceable(4) %num) local_unnamed_addr #5 comdat align 2 {
entry:
  %0 = load i32, i32* %num, align 4, !tbaa !2
  %add = add nsw i32 %0, %index
  %_size = getelementptr inbounds %class.CBaseRecordVector, %class.CBaseRecordVector* %this, i64 0, i32 2
  %1 = load i32, i32* %_size, align 4, !tbaa !20
  %cmp = icmp sgt i32 %add, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %sub = sub nsw i32 %1, %index
  store i32 %sub, i32* %num, align 4, !tbaa !2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i32 @_ZeqRK4GUIDS1_(%struct.GUID* dereferenceable(16) %g1, %struct.GUID* dereferenceable(16) %g2) local_unnamed_addr #9 comdat {
for.body.bcmpdispatchbb:
  %cstr = bitcast %struct.GUID* %g1 to i8*
  %cstr12 = bitcast %struct.GUID* %g2 to i8*
  %bcmp = call i32 @bcmp(i8* nonnull dereferenceable(16) %cstr, i8* nonnull dereferenceable(16) %cstr12, i64 16)
  %g1.vs.g2.eqcmp = icmp eq i32 %bcmp, 0
  %spec.select = zext i1 %g1.vs.g2.eqcmp to i32
  ret i32 %spec.select
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local dereferenceable(8) i8** @_ZN13CRecordVectorIPvEixEi(%class.CRecordVector* %this, i32 %index) local_unnamed_addr #5 comdat align 2 {
entry:
  %_items = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0, i32 3
  %0 = bitcast i8** %_items to i8***
  %1 = load i8**, i8*** %0, align 8, !tbaa !54
  %idxprom = sext i32 %index to i64
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %idxprom
  ret i8** %arrayidx
}

; Function Attrs: uwtable
define linkonce_odr dso_local i32 @_ZN13CRecordVectorIPvE3AddES0_(%class.CRecordVector* %this, i8* %item) local_unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0
  tail call void @_ZN17CBaseRecordVector18ReserveOnePositionEv(%class.CBaseRecordVector* %0)
  %_items = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0, i32 3
  %1 = bitcast i8** %_items to i8***
  %2 = load i8**, i8*** %1, align 8, !tbaa !54
  %_size = getelementptr %class.CRecordVector, %class.CRecordVector* %this, i64 0, i32 0, i32 2
  %3 = load i32, i32* %_size, align 4, !tbaa !20
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom
  store i8* %item, i8** %arrayidx, align 8, !tbaa !12
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %_size, align 4, !tbaa !20
  ret i32 %3
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN8NArchive4NSwf4CTagC2ERKS1_(%"struct.NArchive::NSwf::CTag"* %this, %"struct.NArchive::NSwf::CTag"* dereferenceable(32) %0) unnamed_addr #8 comdat align 2 {
entry:
  %Type = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %this, i64 0, i32 0
  %Type2 = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %0, i64 0, i32 0
  %1 = load i32, i32* %Type2, align 8, !tbaa !24
  store i32 %1, i32* %Type, align 8, !tbaa !24
  %Buf = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %this, i64 0, i32 1
  %Buf3 = getelementptr inbounds %"struct.NArchive::NSwf::CTag", %"struct.NArchive::NSwf::CTag"* %0, i64 0, i32 1
  tail call void @_ZN7CBufferIhEC2ERKS0_(%class.CBuffer* nonnull %Buf, %class.CBuffer* nonnull dereferenceable(24) %Buf3)
  ret void
}

declare dso_local void @_ZN17CBaseRecordVector18ReserveOnePositionEv(%class.CBaseRecordVector*) local_unnamed_addr #6

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN7CBufferIhEC2ERKS0_(%class.CBuffer* %this, %class.CBuffer* dereferenceable(24) %buffer) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr %class.CBuffer, %class.CBuffer* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV7CBufferIhE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !38
  %_capacity = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 1
  %1 = bitcast i64* %_capacity to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %1, i8 0, i64 16, i1 false)
  %call = tail call dereferenceable(24) %class.CBuffer* @_ZN7CBufferIhEaSERKS0_(%class.CBuffer* %this, %class.CBuffer* nonnull dereferenceable(24) %buffer)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local dereferenceable(24) %class.CBuffer* @_ZN7CBufferIhEaSERKS0_(%class.CBuffer* %this, %class.CBuffer* dereferenceable(24) %buffer) local_unnamed_addr #4 comdat align 2 {
entry:
  tail call void @_ZN7CBufferIhE4FreeEv(%class.CBuffer* %this)
  %_capacity = getelementptr inbounds %class.CBuffer, %class.CBuffer* %buffer, i64 0, i32 1
  %0 = load i64, i64* %_capacity, align 8, !tbaa !27
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN7CBufferIhE11SetCapacityEm(%class.CBuffer* %this, i64 %0)
  %_items = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %1 = load i8*, i8** %_items, align 8, !tbaa !42
  %_items3 = getelementptr inbounds %class.CBuffer, %class.CBuffer* %buffer, i64 0, i32 2
  %2 = load i8*, i8** %_items3, align 8, !tbaa !42
  %3 = load i64, i64* %_capacity, align 8, !tbaa !27
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %3, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret %class.CBuffer* %this
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN7CBufferIhE4FreeEv(%class.CBuffer* %this) local_unnamed_addr #5 comdat align 2 {
entry:
  %_items = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 2
  %0 = load i8*, i8** %_items, align 8, !tbaa !42
  %isnull = icmp eq i8* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdaPv(i8* nonnull %0) #22
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  %_capacity = getelementptr inbounds %class.CBuffer, %class.CBuffer* %this, i64 0, i32 1
  %1 = bitcast i64* %_capacity to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %1, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nofree
declare dso_local noalias nonnull i8* @_Znam(i64) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i64 @_Z5MyMinImET_S0_S0_(i64 %a, i64 %b) local_unnamed_addr #9 comdat {
entry:
  %cmp = icmp ult i64 %a, %b
  %cond = select i1 %cmp, i64 %a, i64 %b
  ret i64 %cond
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_SwfHandler.cpp() #4 section ".text.startup" {
entry:
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { noinline noreturn nounwind }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn }
attributes #21 = { builtin }
attributes #22 = { builtin nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0 (https://github.com/yechunliang/llvm-project.git dd79f5a706f83543bb5f0e892b1bde9afe80570e)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
!6 = !{!7, !3, i64 8}
!7 = !{!"_ZTS14tagSTATPROPSTG", !8, i64 0, !3, i64 8, !9, i64 12}
!8 = !{!"any pointer", !4, i64 0}
!9 = !{!"short", !4, i64 0}
!10 = !{!7, !9, i64 12}
!11 = !{!9, !9, i64 0}
!12 = !{!8, !8, i64 0}
!13 = !{!14, !16, i64 56}
!14 = !{!"_ZTSN8NArchive4NSwf8CHandlerE", !15, i64 24, !16, i64 56}
!15 = !{!"_ZTS13CObjectVectorIN8NArchive4NSwf4CTagEE"}
!16 = !{!"long long", !4, i64 0}
!17 = !{!18, !9, i64 0}
!18 = !{!"_ZTS14tagPROPVARIANT", !9, i64 0, !9, i64 2, !9, i64 4, !9, i64 6, !4, i64 8}
!19 = !{!18, !9, i64 2}
!20 = !{!21, !3, i64 12}
!21 = !{!"_ZTS17CBaseRecordVector", !3, i64 8, !3, i64 12, !8, i64 16, !22, i64 24}
!22 = !{!"long", !4, i64 0}
!23 = !{!4, !4, i64 0}
!24 = !{!25, !3, i64 0}
!25 = !{!"_ZTSN8NArchive4NSwf4CTagE", !3, i64 0, !26, i64 8}
!26 = !{!"_ZTS7CBufferIhE", !22, i64 8, !8, i64 16}
!27 = !{!26, !22, i64 8}
!28 = !{!29, !3, i64 8}
!29 = !{!"_ZTSN8NArchive4NSwf10CBitReaderE", !8, i64 0, !3, i64 8, !4, i64 12}
!30 = !{!29, !8, i64 0}
!31 = !{!29, !4, i64 12}
!32 = !{!33, !8, i64 0}
!33 = !{!"_ZTS9CInBuffer", !8, i64 0, !8, i64 8, !8, i64 16, !34, i64 24, !16, i64 32, !3, i64 40, !35, i64 44}
!34 = !{!"_ZTS9CMyComPtrI19ISequentialInStreamE", !8, i64 0}
!35 = !{!"bool", !4, i64 0}
!36 = !{!33, !8, i64 8}
!37 = !{!16, !16, i64 0}
!38 = !{!39, !39, i64 0}
!39 = !{!"vtable pointer", !5, i64 0}
!40 = !{!33, !16, i64 32}
!41 = !{!33, !8, i64 16}
!42 = !{!26, !8, i64 16}
!43 = !{!44, !16, i64 56}
!44 = !{!"_ZTS14CLocalProgress", !45, i64 16, !46, i64 24, !35, i64 32, !16, i64 40, !16, i64 48, !16, i64 56, !35, i64 64, !35, i64 65}
!45 = !{!"_ZTS9CMyComPtrI9IProgressE", !8, i64 0}
!46 = !{!"_ZTS9CMyComPtrI21ICompressProgressInfoE", !8, i64 0}
!47 = !{!44, !16, i64 48}
!48 = !{!46, !8, i64 0}
!49 = !{!50, !8, i64 0}
!50 = !{!"_ZTS9CMyComPtrI20ISequentialOutStreamE", !8, i64 0}
!51 = !{!52, !3, i64 0}
!52 = !{!"_ZTS13CMyUnknownImp", !3, i64 0}
!53 = !{!34, !8, i64 0}
!54 = !{!21, !8, i64 16}
!55 = !{!21, !22, i64 24}
