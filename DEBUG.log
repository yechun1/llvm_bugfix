#define LLVM_DBG(X) do { X; } while (false)
  for (MachineBasicBlock &MBB : MF)
    dbgs() << "chris-begin-: " << MBB << "\n";
  for (MachineBasicBlock &MBB : MF)
    dbgs() << "chris-end-: " << MBB << "\n";


###
OPT=/data/proj/compiler/llvm/llvm-project/build/bin/opt
OPT_DBG=/data/proj/compiler/llvm/llvm-project/build_debug/bin/opt
OPT_ORIG=/data/proj/compiler/llvm/llvm-project.orig/build/bin/opt


# llvm-dev mail list
http://llvm.1065342.n5.nabble.com/

# start
  for (MachineFunction::iterator MBBI = MF.begin(), E = MF.end(); MBBI != E; ++MBBI) {
    MachineBasicBlock *MBB = &*MBBI;
    dbgs() << "out-: " << &*MBBI << "\n";
  }

  
  dbgs() << "chris-begin-: \n";
  LLVM_DBG(MF->print(dbgs()));
###

#######################################################################
### build ###
#######################################################################
git format-patch -U999999 @{u}
#git show HEAD -U999999 > mypatch.patch

### Release|Debug
# cmake -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm; make -j8
# cmake -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Debug -G "Unix Makefiles" ../llvm; make -j8

# cmake -DLLVM_ENABLE_PROJECTS=clang -DLLVM_TARGETS_TO_BUILD="X86;AArch64;ARM" -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm; make -j8
# cmake -DLLVM_ENABLE_ASSERTIONS=On -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm; make -j8

# make check-clang
# make llc

### test-suite ###
#cmake -DCMAKE_C_COMPILER=/usr/bin/clang -C../test-suite/cmake/caches/O3.cmake ../test-suite
#cmake -DCMAKE_C_COMPILER=/data/proj/compiler/llvm/llvm-project/build/bin/clang -C ../test-suite/cmake/caches/O3.cmake ../test-suite
#######################################################################
Re: Should GCC emit the same code for compilation with '-g' and without '-g'
https://gcc.gnu.org/ml/gcc/2018-05/msg00011.html
#######################################################################
